[{"/home/marco/Documents/project_react/proj-biblia/client/src/index.js":"1","/home/marco/Documents/project_react/proj-biblia/client/src/App.js":"2","/home/marco/Documents/project_react/proj-biblia/client/src/components/biblia/biblia.js":"3","/home/marco/Documents/project_react/proj-biblia/client/src/components/painelLeitura/painelLeitura.js":"4","/home/marco/Documents/project_react/proj-biblia/client/src/components/header/header.js":"5","/home/marco/Documents/project_react/proj-biblia/client/src/components/article/article.js":"6","/home/marco/Documents/project_react/proj-biblia/client/src/components/menu/menu.js":"7","/home/marco/Documents/project_react/proj-biblia/client/src/components/footer/footer.js":"8","/home/marco/Documents/project_react/proj-biblia/client/src/components/biblia/selectTestamento.js":"9","/home/marco/Documents/project_react/proj-biblia/client/src/components/biblia/carrosel.js":"10","/home/marco/Documents/project_react/proj-biblia/client/src/fetch/api.js":"11","/home/marco/Documents/project_react/proj-biblia/client/src/components/progresso/progresso.js":"12","/home/marco/Documents/project_react/proj-biblia/client/src/components/popularBDHarpa/popularBDHarpa.js":"13","/home/marco/Documents/project_react/proj-biblia/client/src/components/hinoHarpa/hinoHarpa.js":"14","/home/marco/Documents/project_react/proj-biblia/client/src/components/painelMenuLateral/painelMenuLateral.js":"15"},{"size":993,"mtime":1609634031288,"results":"16","hashOfConfig":"17"},{"size":414,"mtime":1609267543181,"results":"18","hashOfConfig":"17"},{"size":1534,"mtime":1609402812203,"results":"19","hashOfConfig":"17"},{"size":6278,"mtime":1609739173149,"results":"20","hashOfConfig":"17"},{"size":3464,"mtime":1609267849725,"results":"21","hashOfConfig":"17"},{"size":1445,"mtime":1609739556952,"results":"22","hashOfConfig":"17"},{"size":1023,"mtime":1609634132345,"results":"23","hashOfConfig":"17"},{"size":526,"mtime":1608656548759,"results":"24","hashOfConfig":"17"},{"size":6231,"mtime":1609475140656,"results":"25","hashOfConfig":"17"},{"size":947,"mtime":1609267636128,"results":"26","hashOfConfig":"17"},{"size":206,"mtime":1609146140963,"results":"27","hashOfConfig":"17"},{"size":550,"mtime":1608672760061,"results":"28","hashOfConfig":"17"},{"size":3425,"mtime":1609582165471,"results":"29","hashOfConfig":"17"},{"size":7663,"mtime":1609739288666,"results":"30","hashOfConfig":"17"},{"size":1368,"mtime":1609739183777,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"nyl6v8",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"34"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"34"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"34"},"/home/marco/Documents/project_react/proj-biblia/client/src/index.js",[],["71","72"],"/home/marco/Documents/project_react/proj-biblia/client/src/App.js",[],"/home/marco/Documents/project_react/proj-biblia/client/src/components/biblia/biblia.js",[],"/home/marco/Documents/project_react/proj-biblia/client/src/components/painelLeitura/painelLeitura.js",["73","74","75","76"],"import { React, useState, useEffect } from 'react';\n\nimport SearchAppBar from \"../header/header\"\nimport LinearIndeterminate from \"../../components/progresso/progresso\"\nimport Footer from \"../../components/footer/footer\"\nimport PainelMenuLateral from \"../../components/painelMenuLateral/painelMenuLateral\"\nimport GetAPI from \"../../fetch/api\"\nimport \"./painelLeitura.css\"\n\nexport default function PainelLeitura(props) { //recebe via url 3 Parametros: props.match.idade,  props.match.params.livro  props.match.params.capitulo\n        const [idade, setIdade] = useState() //recebe do async a idade do livro, novo ou antigo\n        const [paramsLivro, SetParamsLivro] = useState(props.match.params.livro)//recebe o param livro quando o componente é aberto\n        const [paramscapitulo, SetParamsCapitulo] = useState(props.match.params.capitulo) //recebe o param capitulo quando o componente é aberto\n        const [capitulos, setCapitulos] = useState(false) //é alterado com o effect quando o site é carregado e pela func NavegaPagina que é chamadoa por avançar e voltar pagina\n        const [indiceCapitulos, setIndiceCapitulos] = useState([]) //usado para listar os capitulos os botoes avanças e voltar\n\n\n\n\n\n        useEffect(async () => {//quando carrgada o componente, ja carrega com o livro e capitulo recebido pelo params\n                let armazenaIdadeLivro = \"\"\n                if (props.match.params.idade === \"antigo\") {\n                        armazenaIdadeLivro = \"buscalivroantigotesta\"\n                        setIdade(\"antigotesta\")\n                        var recebe = await GetAPI(`antigotesta/${paramsLivro}/${paramscapitulo}`) // recebe = obj versiculos do capitulo + quantidade de capitulos do livro\n                        setCapitulos(recebe)\n                } else {\n                        armazenaIdadeLivro = \"buscalivronovotesta\"\n                        setIdade(\"novotesta\")\n                        var recebe = await GetAPI(`novotesta/${paramsLivro}/${paramscapitulo}`)\n                        setCapitulos(recebe)\n                }\n                // const recebe = await GetAPI(`${armazenaIdadeLivro}/${paramsLivro}/${paramscapitulo}`)\n                // console.log(recebe)\n                // setCapitulos(recebe) // recebe = obj versiculos do capitulo + quantidade de capitulos do livro\n\n                //assim que recebe os dados é feito um loop for no obj para listar os capitulos\n                var temp = []\n                for (var i = 1; i <= recebe.data[0]; i++) {\n                        temp.push(<option value={i} key={i}>{i}</option>)\n                }\n                setIndiceCapitulos(temp)\n\n        }, [])\n\n        async function NavegaPagina(recebe, livro, capitulo) {//funcao para navegar entre os capitulos e livros chamada avanças e voltar páginas\n\n                const navega = await GetAPI(`${idade}/${livro}/${capitulo}`)\n                SetParamsLivro(livro)\n                SetParamsCapitulo(capitulo)\n                setCapitulos(navega)\n\n                console.log(\"NAVEGOU\")\n        }\n\n\n        if (!capitulos) {//ICONE DE CARREGAR ENQUANTO NÃO TRAS AS INFOD\n                return (\n                        <>\n                                <SearchAppBar />\n                                <LinearIndeterminate />\n                                <Footer />\n                        </>\n                )\n        }\n\n        return (\n                <>\n                        <SearchAppBar />\n                        <article className=\"painelleitura-article\">\n                                <h3 className=\"painelleitura-article-h3\">{paramsLivro} - {paramscapitulo}</h3>\n                                {capitulos.data[1].map((recebe, index) => {\n                                        return (\n                                                <p className=\"painelleitura-article-paragrafo\" key={index}>{index + 1} - {recebe}</p>)\n                                })}\n\n                                <ul className=\"painelleitura-article-ul\" >\n\n                                        <li className=\"painelleitura-article-li\" onClick={(recebe, livro = paramsLivro, capitulo = parseInt(paramscapitulo) - 1) => {\n                                                NavegaPagina(recebe, livro, capitulo)\n                                        }}>\n                                                <span><i className=\"fas fa-arrow-circle-left fa-sm\"></i></span>  {paramsLivro} - {parseInt(paramscapitulo) - 1}\n                                        </li >\n\n                                        {/* <li className=\"painelleitura-article-li\" className=\"painelleitura-article-li\">\n                                                CAPÍTULO\n                                        </li> */}\n                                        <li className=\"painelleitura-article-li\" >\n\n                                                <label  >CAPÍTULO</label>\n\n\n                                                <select className=\"painelleitura-article-select\"\n                                                        value={parseInt(paramscapitulo)}\n                                                        onChange={(recebe, livro = paramsLivro, capitulo = \"\") => {\n                                                                NavegaPagina(recebe, livro, capitulo = recebe.target.value)\n                                                        }}>\n                                                        {indiceCapitulos}\n                                                </select>\n\n                                        </li>\n\n                                        <li className=\"painelleitura-article-li\" onClick={(recebe, livro = paramsLivro, capitulo = parseInt(paramscapitulo) + 1) => {\n                                                NavegaPagina(recebe, livro, capitulo)\n                                        }}>\n                                                {paramsLivro} - {parseInt(paramscapitulo) + 1} <span><i className=\"fas fa-arrow-circle-right fa-sm\"></i></span>\n                                        </li >\n\n                                </ul>\n                        </article>\n\n\n\n                        <PainelMenuLateral />\n\n                        <Footer />\n\n\n                </>\n        )\n\n\n}","/home/marco/Documents/project_react/proj-biblia/client/src/components/header/header.js",[],"/home/marco/Documents/project_react/proj-biblia/client/src/components/article/article.js",[],"/home/marco/Documents/project_react/proj-biblia/client/src/components/menu/menu.js",[],"/home/marco/Documents/project_react/proj-biblia/client/src/components/footer/footer.js",[],"/home/marco/Documents/project_react/proj-biblia/client/src/components/biblia/selectTestamento.js",["77","78"],"import { React, useState, useEffect } from 'react';\nimport { Link } from \"react-router-dom\"\n\nimport GetAPI from \"../../fetch/api\"\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Input from '@material-ui/core/Input';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\nconst useStyles = makeStyles((theme) => ({\n    container: {\n        display: 'flex',\n        flexWrap: 'wrap',\n    },\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120,\n    },\n}));\n\nexport default function DialogSelect(props) {//props recebe ANTIGO TESTAMENTO\" ou NOVO TESTAMENTO\"\n\n    const [antigoTestamento, setAntigoTestamento] = useState() //armazena a busca os livros\n    const [idadeLivro, setIdadeLivro] = useState([])//usado como parâmetro para direcionar url componente painelLeitura\n    const [selectLivro, setSelectLivro] = useState() //usado para poder alterar campo do livro\n    const [selectCapitulo, setSelectCapitulo] = useState() // armazena a busca pelos capítulos\n    const [selectCapituloAlteraCampo, setSelectCapituloAlteraCampo] = useState() //usado para poder alterar campo do capitulo\n\n\n    const classes = useStyles();\n    const [open, setOpen] = useState(false);\n\n\n    useEffect(async () => { //assim que o módulo carregar buscar os livros\n\n        if (props.idadeLivro === \"ANTIGO TESTAMENTO\") {// se antigo testamento, busque os respectivos livros\n            const resultado = await GetAPI(\"buscalivroantigotesta\")\n            setIdadeLivro(\"antigo\")\n            setAntigoTestamento(resultado)\n        } else {\n\n            const resultado = await GetAPI(\"buscalivronovotesta\")\n            setIdadeLivro(\"novo\")\n            setAntigoTestamento(resultado)\n        }\n\n\n    }, [])\n\n\n    const handleChange = (event) => {\n        setSelectLivro(event.target.value)\n        BuscaCapitulo(event.target.value)\n    };\n\n    async function BuscaCapitulo(recebe) { //busca o capitulo enviado o livro (recebe)\n        if (props.idadeLivro === \"ANTIGO TESTAMENTO\") {\n            const capitulos = await GetAPI(`buscacapituloantigotesta${recebe}`)\n            setSelectCapitulo(capitulos)\n        } else {\n            const capitulos = await GetAPI(`buscacapitulonovotesta${recebe}`)\n            setSelectCapitulo(capitulos)\n        }\n\n    }\n\n    const handleClickOpen = () => {\n\n\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n\n\n        setOpen(false);\n    };\n\n\n\n    return (\n        <div >\n            <Button style={{ fontFamily: \"Lora\", fontSize: \"25px\", color: \"White\", borderRadius: \"350px\" }} onClick={handleClickOpen}>BUSCAR LIVRO</Button>\n            <Dialog disableBackdropClick disableEscapeKeyDown open={open} onClose={handleClose}>\n                <DialogTitle >{props.idadeLivro}</DialogTitle>\n                <DialogContent>\n                    <form className={classes.container}>\n                        <FormControl className={classes.formControl}>\n                            <InputLabel htmlFor=\"demo-dialog-native\">LIVRO</InputLabel>\n                            <Select\n                                native\n                                value={selectLivro}\n                                onChange={handleChange}\n                                input={<Input id=\"demo-dialog-native\" />}\n                            >\n                                <option aria-label=\"None\" value=\"SELECIONE\"> </option>\n\n                                {antigoTestamento && antigoTestamento.data.map((recebe, index) => {\n                                    return (\n                                        < option key={index} > {recebe}</option>)\n                                })}\n\n                                {/* <option value={10}>Ten</option>\n                                <option value={20}>Twenty</option>\n                                <option value={30}>Thirty</option> */}\n                            </Select>\n                        </FormControl>\n                        <FormControl className={classes.formControl}>\n                            <InputLabel id=\"demo-dialog-select-label\">CAPITULO</InputLabel>\n                            <Select\n                                native\n                                value={selectCapituloAlteraCampo}\n                                onChange={(recebe) => { setSelectCapituloAlteraCampo(recebe.target.value) }}\n                                input={<Input id=\"demo-dialog-native\" />}\n                            >\n\n                                <option aria-label=\"None\" value=\"SELECIONE\"> </option>\n                                {selectCapitulo && selectCapitulo.data.map((recebe, index) => {\n                                    return (\n\n                                        <option key={index} >{recebe}</option>\n                                    )\n\n\n                                })}\n                                {/* <MenuItem value={10}>Ten</MenuItem> */}\n                                {/* <MenuItem value={20}>Twenty</MenuItem>\n                                <MenuItem value={30}>Thirty</MenuItem> */}\n                            </Select>\n                        </FormControl>\n                    </form>\n                </DialogContent>\n                <DialogActions>\n\n                    <Button onClick={handleClose} color=\"primary\">\n                        Cancel\n          </Button>\n\n                    <Link to={`/biblianvi/painelleitura/${idadeLivro}/${selectLivro}/${selectCapituloAlteraCampo}`} >\n                        {/* direciona para a URL/componente /biblianvi/painelleitura com os params forçando abrir o componente painelLeitura com o livro e o cap */}\n                        <Button onClick={handleClose} color=\"primary\">\n                            Ok\n          </Button>\n                    </Link>\n                </DialogActions>\n            </Dialog>\n        </div >\n    );\n}\n","/home/marco/Documents/project_react/proj-biblia/client/src/components/biblia/carrosel.js",["79","80","81","82"],"import React from 'react';\nimport { useState } from 'react';\nimport \"./carrosel.css\"\nimport Zero from \"./zero.jpg\"\nimport Um from \"./um.jpg\"\nimport Dois from \"./dois.png\"\n\n\n\nexport default function Carrosel(props) {\n\n    const [imagem, setImagem] = useState(\n        [\n            Zero,\n            Um,\n            Dois,\n        ]\n    )\n\n\n\n    if (props.idadeLivro === \"ANTIGO TESTAMENTO\") {\n        return (\n            <div className=\"carrosel-div\">\n                <img className=\"imagem-carrosel\" src={imagem[0]} />\n            </div>\n        )\n    }\n\n    if (props.idadeLivro === \"NOVO TESTAMENTO\") {\n        return (\n            <div className=\"carrosel-div\">\n                <img className=\"imagem-carrosel\" src={imagem[1]} />\n            </div>\n        )\n    }\n\n    else {\n        return (\n            <div className=\"carrosel-div\">\n                <img className=\"imagem-carrosel\" src={imagem[2]} />\n            </div>\n        )\n    }\n\n\n}","/home/marco/Documents/project_react/proj-biblia/client/src/fetch/api.js",[],"/home/marco/Documents/project_react/proj-biblia/client/src/components/progresso/progresso.js",[],["83","84"],"/home/marco/Documents/project_react/proj-biblia/client/src/components/popularBDHarpa/popularBDHarpa.js",["85","86","87"],"import { emphasize, useScrollTrigger } from '@material-ui/core';\nimport { React, useState, useEffect } from 'react';\nimport axios from \"axios\"\nimport \"./populaBDHARPA.css\"\n\n\n\nexport default function PopularBDHarpa() {\n    const [numero, setNumero] = useState()\n    const [titulo, setTitulo] = useState()\n    const [letra, setLetra] = useState()\n    const [dados, setDados] = useState(false)\n    const [temp, setTemp] = useState(false)\n\n\n    useEffect(() => {\n\n        var armazena\n        if (dados) {\n\n            // console.log(dados)\n            // armazena = dados.data[0].letra.split(\"%\")\n            // dados.data.map((recebe) => {\n\n            //     armazena.push(\n\n            //         <p>{recebe.letra[2]}</p>\n            //     )\n\n\n            // })\n        }\n        // console.log(armazena[2])\n        setTemp(armazena)\n\n    }, [dados])\n\n\n    async function GetAPIFAKE(livro, nome) {\n        const resultado = await axios.post(\"http://192.168.0.6:9000/cadastraharpa\", {\n            numero: numero,\n            titulo: titulo,\n            letra: [letra]\n        })\n\n        // const resultado = await axios.get(\"http://192.168.0.6:9000/cadastraharpa\")\n        setDados(resultado)\n        console.log(resultado)\n        console.log(dados)\n        return resultado\n\n    }\n\n    async function Chama(data) {\n        //data.preventDefault()\n        console.log(\"Solicitou APIFAKE\")\n        const recebe = await GetAPIFAKE()\n\n    }\n\n    if (!temp) {\n        return (\n            <form onSubmit={(envia) => { Chama(envia) }}>\n\n                <label>Numero Louvor</label>\n                <input className=\"caixa\"\n                    value={numero}\n                    onChange={(recebe) => { setNumero(recebe.target.value) }}\n                ></input>\n                <br />\n\n\n                <label>Título Louvor</label>\n                <input className=\"caixa\"\n                    value={titulo}\n                    onChange={(recebe) => {\n                        setTitulo(recebe.target.value)\n\n                    }}\n                ></input>\n                <br />\n\n\n                <label>Letra Louvor</label>\n                <input className=\"caixa\"\n                    valur={letra}\n                    onChange={(recebe) => { setLetra(recebe.target.value) }}\n                ></input>\n                <button className=\"botaoo\" >CADASTRA</button>\n\n            </form>\n        )\n    }\n\n    return (\n        <>\n            <form onSubmit={(envia) => { Chama(envia) }}>\n\n                <label>Numero Louvor</label>\n                <input\n                    value={numero}\n                    onChange={(recebe) => { setNumero(recebe.target.value) }}\n                ></input>\n                <br />\n\n\n                <label>Título Louvor</label>\n                <input\n                    value={titulo}\n                    onChange={(recebe) => {\n                        setTitulo(recebe.target.value)\n\n                    }}\n                ></input>\n                <br />\n\n\n                <label>Letra Louvor</label>\n                <input\n                    valur={letra}\n                    onChange={(recebe) => { setLetra(recebe.target.value) }}\n                ></input>\n                <button >CADASTRA</button>\n\n            </form>\n\n\n            {temp.map((recebe) => {\n                return (\n                    <p>{recebe}</p>\n                )\n            })}\n        </>\n\n\n\n\n\n    )\n\n\n}\n\n\n",["88","89"],"/home/marco/Documents/project_react/proj-biblia/client/src/components/hinoHarpa/hinoHarpa.js",["90","91","92"],"import { React, useState, useEffect } from 'react';\nimport { Link } from \"react-router-dom\"\nimport SearchAppBar from \"../header/header\"\nimport Footer from \"../../components/footer/footer\"\nimport LinearIndeterminate from \"../../components/progresso/progresso\"\nimport PainelMenuLateral from \"../../components/painelMenuLateral/painelMenuLateral\"\nimport \"./hinoHarpa.css\"\nimport GetAPI from \"../../fetch/api\"\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport TextField from '@material-ui/core/TextField'\nimport Button from '@material-ui/core/Button'\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 80,\n\n    },\n    selectEmpty: {\n        marginTop: theme.spacing(2),\n    },\n}));\n\nexport default function HinoHarpa() {\n    const classes = useStyles();\n    const [numerosHinos, setNumerosHinos] = useState()  //armazena numeros dos hinos vindos do bd\n    const [alteraCampoNumero, setAlteraCampoNumero] = useState(false) //responspavel por fixar o campo nuro selecionado\n    const [letraHino, setLetraHino] = useState(false) //armazena a letra do Hino. é falso para renderizar somente quando houver dados\n    const [tituloHino, setTituloHino] = useState() //armazena o título do Hino\n    const [campoTituloBusca, setCampoTituloBusca] = useState()// armazena dados do campo busca titulo\n    const [dadosBuscaPesquisaPorTitulo, setDadosBuscaPesquisaPorTitulo] = useState(false) //armazena os dados da pesquisa por nome. é falso para renderizar somente quando houver dados\n\n    useEffect(async () => {\n\n        const resultado = await GetAPI(\"buscanumeroharpa\")\n        setNumerosHinos(resultado)\n\n    }, [])\n\n\n    if (!numerosHinos) {\n        return (\n            <LinearIndeterminate />\n        )\n    }\n\n    async function BuscarHinoPorNumero(recebe) {//recebe só terá valor se for chamada pelo buscar por título Gabi, pq demora para atualizar o estado do setAlteraCampoNumero\n\n        if (recebe) {\n            setAlteraCampoNumero(recebe)\n            const buscaHino = await GetAPI(`buscatitulopornumero/${recebe}`)\n            console.log(letraHino)\n            var armazena = []\n            armazena = buscaHino.data[0].letra.split(\"%\")\n            setLetraHino(armazena)//armazena array com as linhas já divididas\n            setTituloHino(buscaHino.data[0].titulo) //armazena o titulo do hino\n        } else {\n\n            const buscaHino = await GetAPI(`buscatitulopornumero/${alteraCampoNumero}`)\n            console.log(letraHino)\n            var armazena = []\n            armazena = buscaHino.data[0].letra.split(\"%\")\n            setLetraHino(armazena)//armazena array com as linhas já divididas\n            setTituloHino(buscaHino.data[0].titulo) //armazena o titulo do hino\n        }\n    }\n\n    async function BuscahinoPorLetraTitulo() {//busca título hino por letra\n        const recebe = await GetAPI(`buscatituloporpalavra/${campoTituloBusca}`)\n        console.log(recebe)\n        setLetraHino(false)//não permitindo renderizar as letras do hino que estiver sendo mostrado\n        setDadosBuscaPesquisaPorTitulo(recebe) //armazena os dados da busca\n\n    }\n\n    return (\n\n        <>\n            <nav className=\"hinoharpa-nav\">\n                <SearchAppBar />\n\n                <article className=\"hinoharp-article\">\n                    {/* style={{ display: \"block\" }} */}\n\n                    <div className=\"hinoharpa-article-div-numero\">\n                        <label className=\"hinoharpa-article-div-label-numero\" >POR NÚMERO</label>\n\n                        <form className=\"hinoharpa-article-div-form\"\n\n                        >\n                            <select className=\"hinoharpa-article-div-select\"\n                                value={alteraCampoNumero}\n                                onChange={(recebe) => setAlteraCampoNumero(recebe.target.value)}\n                            >\n\n                                {numerosHinos.data.map((recebe, index) => {\n                                    return (\n                                        <option key={index} >{recebe.numero}</option>\n\n                                    )\n                                })}\n                            </select>\n\n                            <TextField style={{ marginLeft: \"20px\" }}\n                                disabled={true}\n\n                                // value={tituloHino}\n                                size=\"small\"\n                                id=\"outlined-basic\"\n                                label={tituloHino} variant=\"outlined\" />\n\n                            <Button style={{ backgroundColor: \"#14a37f\", color: \"White\", marginLeft: \"10px\" }} variant=\"contained\"\n                                onClick={() => { BuscarHinoPorNumero() }}\n\n                            >BUSCAR</Button>\n\n                        </form>\n\n\n\n                    </div>\n\n                    <div className=\"hinoharpa-article-div-titulo\">\n\n\n\n                        <div>\n                            <label className=\"hinoharpa-article-div-label-titulo\" >POR TÍTULO</label>\n\n                        </div>\n\n\n                        <form className={classes.root} noValidate autoComplete=\"off\">\n                            <TextField\n\n                                onChange={(recebe) => {\n                                    setCampoTituloBusca(recebe.target.value)\n                                }}\n                                size=\"small\" id=\"outlined-basic\" label=\"DIGITE\" variant=\"outlined\" />\n                        </form>\n\n\n                        <div>\n                            <Button style={{ backgroundColor: \"#14a37f\", color: \"White\", marginLeft: \"10px\" }}\n                                variant=\"contained\"\n                                onClick={() => { BuscahinoPorLetraTitulo() }}\n                            >BUSCAR</Button>\n                        </div>\n\n                    </div>\n\n                </article>\n                <hr></hr>\n\n                <article className=\"hinoharpaleitura-article\">\n\n                    {letraHino &&\n\n                        letraHino.map((recebe) => {\n                            return (\n                                <>\n                                    <p>{recebe}</p>\n                                </>\n                            )\n                        })}\n\n\n                    <menu className=\"hinoharpa-busca-menu\">\n                        {dadosBuscaPesquisaPorTitulo &&\n\n                            dadosBuscaPesquisaPorTitulo.data.map((recebe, index) => {\n\n                                return (\n\n\n                                    <div\n                                        key={recebe.numero}\n                                        onClick={() => {\n                                            setDadosBuscaPesquisaPorTitulo(false)\n                                            BuscarHinoPorNumero(recebe.numero)\n                                        }}\n                                    >\n\n                                        <p\n\n                                            key={index}\n                                        > <i class=\"icone fas fa-music fa-2x\"></i>HINO: {recebe.numero}</p>\n                                        <p\n                                            key={index}>{recebe.titulo}\n                                        </p>\n                                    </div>\n\n                                )\n\n                            })\n                        }\n                    </menu>\n                </article>\n\n                <PainelMenuLateral />\n\n            </nav>\n\n\n\n\n\n            <Footer />\n        </>\n    )\n\n\n}","/home/marco/Documents/project_react/proj-biblia/client/src/components/painelMenuLateral/painelMenuLateral.js",["93"],"import React from 'react';\nimport { render } from 'react-dom';\nimport { Link } from 'react-router-dom'\nimport \"./painelMenuLateral.css\"\n\nexport default function PainelMenuLateral() {\n\n    return (\n        <menu className=\"painelleitura-menu\">\n\n            <ul className=\"menu-painelleitura-ul\">\n\n                <Link className='li-vamos' to=\"/\">\n                    <li className='menu-painelleitura-li' >\n                        <i className=\"fas fa-home fa-2x icone\"></i>INÍCIO\n                                                </li>\n\n                </Link>\n\n                <Link className='li-vamos' to=\"/biblianvi\">\n                    <li className='menu-painelleitura-li'>\n                        <i className=\"fas fa-bible fa-2x icone\"></i> LEITURA DA BÍBLIA\n                                                </li>\n                </Link>\n                <li className='menu-painelleitura-li' >\n                    <i className=\"fas fa-sun fa-2x icone\"></i>VERSÍCULOS DO DIA\n                                                </li>\n\n                <Link className='li-vamos' to=\"/harpacrista\">\n                    <li className='menu-painelleitura-li' >\n                        <i className=\"fas fa-music fa-2x icone\"></i>HINOS DA HARPA\n                                                </li>\n                </Link>\n\n            </ul>\n\n        </menu>\n    )\n\n\n\n}",{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","severity":1,"message":"99","line":21,"column":19,"nodeType":"100","endLine":45,"endColumn":10},{"ruleId":"101","severity":1,"message":"102","line":29,"column":25,"nodeType":"103","messageId":"104","endLine":29,"endColumn":43},{"ruleId":"105","severity":1,"message":"106","line":31,"column":29,"nodeType":"103","messageId":"107","endLine":31,"endColumn":35},{"ruleId":"98","severity":1,"message":"108","line":45,"column":12,"nodeType":"109","endLine":45,"endColumn":14,"suggestions":"110"},{"ruleId":"98","severity":1,"message":"99","line":40,"column":15,"nodeType":"100","endLine":54,"endColumn":6},{"ruleId":"98","severity":1,"message":"111","line":54,"column":8,"nodeType":"109","endLine":54,"endColumn":10,"suggestions":"112"},{"ruleId":"101","severity":1,"message":"113","line":12,"column":20,"nodeType":"103","messageId":"104","endLine":12,"endColumn":29},{"ruleId":"114","severity":1,"message":"115","line":25,"column":17,"nodeType":"116","endLine":25,"endColumn":68},{"ruleId":"114","severity":1,"message":"115","line":33,"column":17,"nodeType":"116","endLine":33,"endColumn":68},{"ruleId":"114","severity":1,"message":"115","line":41,"column":17,"nodeType":"116","endLine":41,"endColumn":68},{"ruleId":"94","replacedBy":"117"},{"ruleId":"96","replacedBy":"118"},{"ruleId":"101","severity":1,"message":"119","line":1,"column":10,"nodeType":"103","messageId":"104","endLine":1,"endColumn":19},{"ruleId":"101","severity":1,"message":"120","line":1,"column":21,"nodeType":"103","messageId":"104","endLine":1,"endColumn":37},{"ruleId":"101","severity":1,"message":"121","line":57,"column":15,"nodeType":"103","messageId":"104","endLine":57,"endColumn":21},{"ruleId":"94","replacedBy":"122"},{"ruleId":"96","replacedBy":"123"},{"ruleId":"101","severity":1,"message":"124","line":2,"column":10,"nodeType":"103","messageId":"104","endLine":2,"endColumn":14},{"ruleId":"98","severity":1,"message":"99","line":37,"column":15,"nodeType":"100","endLine":42,"endColumn":6},{"ruleId":"105","severity":1,"message":"125","line":65,"column":17,"nodeType":"103","messageId":"107","endLine":65,"endColumn":25},{"ruleId":"101","severity":1,"message":"126","line":2,"column":10,"nodeType":"103","messageId":"104","endLine":2,"endColumn":16},"no-native-reassign",["127"],"no-negated-in-lhs",["128"],"react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","no-unused-vars","'armazenaIdadeLivro' is assigned a value but never used.","Identifier","unusedVar","no-redeclare","'recebe' is already defined.","redeclared","React Hook useEffect has missing dependencies: 'paramsLivro', 'paramscapitulo', and 'props.match.params.idade'. Either include them or remove the dependency array.","ArrayExpression",["129"],"React Hook useEffect has a missing dependency: 'props.idadeLivro'. Either include it or remove the dependency array.",["130"],"'setImagem' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["127"],["128"],"'emphasize' is defined but never used.","'useScrollTrigger' is defined but never used.","'recebe' is assigned a value but never used.",["127"],["128"],"'Link' is defined but never used.","'armazena' is already defined.","'render' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"131","fix":"132"},{"desc":"133","fix":"134"},"Update the dependencies array to be: [paramsLivro, paramscapitulo, props.match.params.idade]",{"range":"135","text":"136"},"Update the dependencies array to be: [props.idadeLivro]",{"range":"137","text":"138"},[2651,2653],"[paramsLivro, paramscapitulo, props.match.params.idade]",[2092,2094],"[props.idadeLivro]"]