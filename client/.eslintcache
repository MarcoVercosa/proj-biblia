[{"/home/marco/Documents/project_react/proj-biblia/client/proj-biblia/src/index.js":"1","/home/marco/Documents/project_react/proj-biblia/client/proj-biblia/src/App.js":"2","/home/marco/Documents/project_react/proj-biblia/client/proj-biblia/src/components/biblia/biblia.js":"3","/home/marco/Documents/project_react/proj-biblia/client/proj-biblia/src/components/header/header.js":"4","/home/marco/Documents/project_react/proj-biblia/client/proj-biblia/src/components/menu/menu.js":"5","/home/marco/Documents/project_react/proj-biblia/client/proj-biblia/src/components/article/article.js":"6","/home/marco/Documents/project_react/proj-biblia/client/proj-biblia/src/components/footer/footer.js":"7","/home/marco/Documents/project_react/proj-biblia/client/proj-biblia/src/components/progresso/progresso.js":"8","/home/marco/Documents/project_react/proj-biblia/client/proj-biblia/src/components/biblia/selectTestamento.js":"9","/home/marco/Documents/project_react/proj-biblia/client/proj-biblia/src/components/biblia/carrosel.js":"10","/home/marco/Documents/project_react/proj-biblia/client/proj-biblia/src/fetch/api.js":"11","/home/marco/Documents/project_react/proj-biblia/client/proj-biblia/src/components/painelLeitura/painelLeitura.js":"12"},{"size":878,"mtime":1609456851457,"results":"13","hashOfConfig":"14"},{"size":414,"mtime":1609267543181,"results":"15","hashOfConfig":"14"},{"size":1534,"mtime":1609402812203,"results":"16","hashOfConfig":"14"},{"size":3464,"mtime":1609267849725,"results":"17","hashOfConfig":"14"},{"size":929,"mtime":1608672908176,"results":"18","hashOfConfig":"14"},{"size":1437,"mtime":1608614799695,"results":"19","hashOfConfig":"14"},{"size":526,"mtime":1608656548759,"results":"20","hashOfConfig":"14"},{"size":550,"mtime":1608672760061,"results":"21","hashOfConfig":"14"},{"size":6190,"mtime":1609456851461,"results":"22","hashOfConfig":"14"},{"size":947,"mtime":1609267636128,"results":"23","hashOfConfig":"14"},{"size":206,"mtime":1609146140963,"results":"24","hashOfConfig":"14"},{"size":7600,"mtime":1609456851429,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"193veph",{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"30"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"30"},"/home/marco/Documents/project_react/proj-biblia/client/proj-biblia/src/index.js",[],"/home/marco/Documents/project_react/proj-biblia/client/proj-biblia/src/App.js",[],["55","56"],"/home/marco/Documents/project_react/proj-biblia/client/proj-biblia/src/components/biblia/biblia.js",[],"/home/marco/Documents/project_react/proj-biblia/client/proj-biblia/src/components/header/header.js",["57"],"import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport InputBase from '@material-ui/core/InputBase';\nimport { fade, makeStyles } from '@material-ui/core/styles';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport SearchIcon from '@material-ui/icons/Search';\nimport \"./header.css\"\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    title: {\n        flexGrow: 1,\n        display: 'none',\n        [theme.breakpoints.up('sm')]: {\n            display: 'block',\n        },\n    },\n    search: {\n        position: 'relative',\n        borderRadius: theme.shape.borderRadius,\n        backgroundColor: fade(theme.palette.common.white, 0.15),\n        '&:hover': {\n            backgroundColor: fade(theme.palette.common.white, 0.25),\n        },\n        marginLeft: 0,\n        width: '100%',\n        [theme.breakpoints.up('sm')]: {\n            marginLeft: theme.spacing(1),\n            width: 'auto',\n        },\n    },\n    searchIcon: {\n        padding: theme.spacing(0, 2),\n        height: '100%',\n        position: 'absolute',\n        pointerEvents: 'none',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    inputRoot: {\n        color: 'inherit',\n    },\n    inputInput: {\n        padding: theme.spacing(1, 1, 1, 0),\n        // vertical padding + font size from searchIcon\n        paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n        transition: theme.transitions.create('width'),\n        width: '100%',\n        [theme.breakpoints.up('sm')]: {\n            width: '12ch',\n            '&:focus': {\n                width: '20ch',\n            },\n        },\n    },\n}));\n\nexport default function SearchAppBar() {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <AppBar position=\"relative\" style={{ backgroundColor: \"#14a37f\" }}>\n                <Toolbar>\n                    <IconButton\n                        edge=\"start\"\n                        className={classes.menuButton}\n                        color=\"inherit\"\n                        aria-label=\"open drawer\"\n                    >\n                        {/* <MenuIcon /> */}\n                    </IconButton>\n                    <Typography style={{ display: \"flex\", fontFamily: 'Lora' }}\n                        className={classes.title} variant=\"h4\" noWrap>\n                        <span style={{ marginLeft: \"15px\" }}\n                            className=\"icone-bible\"><i className=\"fas fa-bible fa-sm\"></i></span> <span style={{ marginLeft: \"25px\" }}> FONTE DE VIDA on line</span>\n                    </Typography>\n                    <div className={classes.search}>\n                        <div className={classes.searchIcon}>\n                            <SearchIcon />\n                        </div>\n                        <InputBase\n                            placeholder=\"Pesquisar\"\n                            classes={{\n                                root: classes.inputRoot,\n                                input: classes.inputInput,\n                            }}\n                            inputProps={{ 'aria-label': 'search' }}\n                        />\n                    </div>\n                </Toolbar>\n            </AppBar>\n        </div >\n    );\n}","/home/marco/Documents/project_react/proj-biblia/client/proj-biblia/src/components/menu/menu.js",[],"/home/marco/Documents/project_react/proj-biblia/client/proj-biblia/src/components/article/article.js",[],"/home/marco/Documents/project_react/proj-biblia/client/proj-biblia/src/components/footer/footer.js",[],"/home/marco/Documents/project_react/proj-biblia/client/proj-biblia/src/components/progresso/progresso.js",[],"/home/marco/Documents/project_react/proj-biblia/client/proj-biblia/src/components/biblia/selectTestamento.js",["58","59"],"import { React, useState, useEffect } from 'react';\nimport { Link } from \"react-router-dom\"\n\nimport GetAPI from \"../../fetch/api\"\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Input from '@material-ui/core/Input';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\nconst useStyles = makeStyles((theme) => ({\n    container: {\n        display: 'flex',\n        flexWrap: 'wrap',\n    },\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120,\n    },\n}));\n\nexport default function DialogSelect(props) {//props recebe ANTIGO TESTAMENTO\" ou NOVO TESTAMENTO\"\n\n    const [antigoTestamento, setAntigoTestamento] = useState() //armazena a busca os livros\n    const [idadeLivro, setIdadeLivro] = useState([])//usado como parâmetro para direcionar url componente painelLeitura\n    const [selectLivro, setSelectLivro] = useState() //usado para poder alterar campo do livro\n    const [selectCapitulo, setSelectCapitulo] = useState() // armazena a busca pelos capítulos\n    const [selectCapituloAlteraCampo, setSelectCapituloAlteraCampo] = useState() //usado para poder alterar campo do capitulo\n\n\n    const classes = useStyles();\n    const [open, setOpen] = useState(false);\n\n\n    useEffect(async () => { //assim que o módulo carregar buscar os livros\n\n        if (props.idadeLivro === \"ANTIGO TESTAMENTO\") {// se antigo testamento, busque os respectivos livros\n            const resultado = await GetAPI(\"buscalivroantigotesta\")\n            setIdadeLivro(\"antigo\")\n            setAntigoTestamento(resultado)\n        } else {\n\n            const resultado = await GetAPI(\"buscalivronovotesta\")\n            setIdadeLivro(\"novo\")\n            setAntigoTestamento(resultado)\n        }\n\n\n    }, [])\n\n\n    const handleChange = (event) => {\n        setSelectLivro(event.target.value)\n        BuscaCapitulo(event.target.value)\n    };\n\n    async function BuscaCapitulo(recebe) { //busca o capitulo enviado o livro (recebe)\n        if (props.idadeLivro === \"ANTIGO TESTAMENTO\") {\n            const capitulos = await GetAPI(`buscacapituloantigotesta${recebe}`)\n            setSelectCapitulo(capitulos)\n        } else {\n            const capitulos = await GetAPI(`buscacapitulonovotesta${recebe}`)\n            setSelectCapitulo(capitulos)\n        }\n\n    }\n\n    const handleClickOpen = () => {\n\n\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n\n\n        setOpen(false);\n    };\n\n\n\n    return (\n        <div >\n            <Button style={{ fontFamily: \"Lora\", fontSize: \"25px\", color: \"White\", borderRadius: \"350px\" }} onClick={handleClickOpen}>BUSCAR LIVRO</Button>\n            <Dialog disableBackdropClick disableEscapeKeyDown open={open} onClose={handleClose}>\n                <DialogTitle >{props.idadeLivro}</DialogTitle>\n                <DialogContent>\n                    <form className={classes.container}>\n                        <FormControl className={classes.formControl}>\n                            <InputLabel htmlFor=\"demo-dialog-native\">LIVRO</InputLabel>\n                            <Select\n                                native\n                                value={selectLivro}\n                                onChange={handleChange}\n                                input={<Input id=\"demo-dialog-native\" />}\n                            >\n                                <option aria-label=\"None\" value=\"SELECIONE\"> </option>\n\n                                {antigoTestamento && antigoTestamento.data.map(recebe => {\n                                    return (\n                                        < option  > {recebe}</option>)\n                                })}\n\n                                {/* <option value={10}>Ten</option>\n                                <option value={20}>Twenty</option>\n                                <option value={30}>Thirty</option> */}\n                            </Select>\n                        </FormControl>\n                        <FormControl className={classes.formControl}>\n                            <InputLabel id=\"demo-dialog-select-label\">CAPITULO</InputLabel>\n                            <Select\n                                native\n                                value={selectCapituloAlteraCampo}\n                                onChange={(recebe) => { setSelectCapituloAlteraCampo(recebe.target.value) }}\n                                input={<Input id=\"demo-dialog-native\" />}\n                            >\n\n                                <option aria-label=\"None\" value=\"SELECIONE\"> </option>\n                                {selectCapitulo && selectCapitulo.data.map(recebe => {\n                                    return (\n\n                                        <option >{recebe}</option>\n                                    )\n\n\n                                })}\n                                {/* <MenuItem value={10}>Ten</MenuItem> */}\n                                {/* <MenuItem value={20}>Twenty</MenuItem>\n                                <MenuItem value={30}>Thirty</MenuItem> */}\n                            </Select>\n                        </FormControl>\n                    </form>\n                </DialogContent>\n                <DialogActions>\n\n                    <Button onClick={handleClose} color=\"primary\">\n                        Cancel\n          </Button>\n\n                    <Link to={`/biblianvi/painelleitura/${idadeLivro}/${selectLivro}/${selectCapituloAlteraCampo}`} >\n                        {/* direciona para a URL/componente /biblianvi/painelleitura com os params forçando abrir o componente painelLeitura com o livro e o cap */}\n                        <Button onClick={handleClose} color=\"primary\">\n                            Ok\n          </Button>\n                    </Link>\n                </DialogActions>\n            </Dialog>\n        </div >\n    );\n}\n","/home/marco/Documents/project_react/proj-biblia/client/proj-biblia/src/components/biblia/carrosel.js",["60","61","62","63"],"import React from 'react';\nimport { useState } from 'react';\nimport \"./carrosel.css\"\nimport Zero from \"./zero.jpg\"\nimport Um from \"./um.jpg\"\nimport Dois from \"./dois.png\"\n\n\n\nexport default function Carrosel(props) {\n\n    const [imagem, setImagem] = useState(\n        [\n            Zero,\n            Um,\n            Dois,\n        ]\n    )\n\n\n\n    if (props.idadeLivro === \"ANTIGO TESTAMENTO\") {\n        return (\n            <div className=\"carrosel-div\">\n                <img className=\"imagem-carrosel\" src={imagem[0]} />\n            </div>\n        )\n    }\n\n    if (props.idadeLivro === \"NOVO TESTAMENTO\") {\n        return (\n            <div className=\"carrosel-div\">\n                <img className=\"imagem-carrosel\" src={imagem[1]} />\n            </div>\n        )\n    }\n\n    else {\n        return (\n            <div className=\"carrosel-div\">\n                <img className=\"imagem-carrosel\" src={imagem[2]} />\n            </div>\n        )\n    }\n\n\n}","/home/marco/Documents/project_react/proj-biblia/client/proj-biblia/src/fetch/api.js",[],"/home/marco/Documents/project_react/proj-biblia/client/proj-biblia/src/components/painelLeitura/painelLeitura.js",["64","65","66","67"],"import { React, useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom'\nimport SearchAppBar from \"../header/header\"\nimport LinearIndeterminate from \"../../components/progresso/progresso\"\nimport Footer from \"../../components/footer/footer\"\nimport GetAPI from \"../../fetch/api\"\nimport \"./painelLeitura.css\"\n\nexport default function PainelLeitura(props) { //recebe via url 3 Parametros: props.match.idade,  props.match.params.livro  props.match.params.capitulo\n        const [idade, setIdade] = useState() //recebe do async a idade do livro, novo ou antigo\n        const [paramsLivro, SetParamsLivro] = useState(props.match.params.livro)//recebe o param livro quando o componente é aberto\n        const [paramscapitulo, SetParamsCapitulo] = useState(props.match.params.capitulo) //recebe o param capitulo quando o componente é aberto\n        const [capitulos, setCapitulos] = useState(false) //é alterado com o effect quando o site é carregado e pela func NavegaPagina que é chamadoa por avançar e voltar pagina\n        const [indiceCapitulos, setIndiceCapitulos] = useState([]) //usado para listar os capitulos os botoes avanças e voltar\n\n\n\n\n\n        useEffect(async () => {//quando carrgada o componente, ja carrega com o livro e capitulo recebido pelo params\n                let armazenaIdadeLivro = \"\"\n                if (props.match.params.idade === \"antigo\") {\n                        armazenaIdadeLivro = \"buscalivroantigotesta\"\n                        setIdade(\"antigotesta\")\n                        var recebe = await GetAPI(`antigotesta/${paramsLivro}/${paramscapitulo}`) // recebe = obj versiculos do capitulo + quantidade de capitulos do livro\n                        setCapitulos(recebe)\n                } else {\n                        armazenaIdadeLivro = \"buscalivronovotesta\"\n                        setIdade(\"novotesta\")\n                        var recebe = await GetAPI(`novotesta/${paramsLivro}/${paramscapitulo}`)\n                        setCapitulos(recebe)\n                }\n                // const recebe = await GetAPI(`${armazenaIdadeLivro}/${paramsLivro}/${paramscapitulo}`)\n                // console.log(recebe)\n                // setCapitulos(recebe) // recebe = obj versiculos do capitulo + quantidade de capitulos do livro\n\n                //assim que recebe os dados é feito um loop for no obj para listar os capitulos\n                var temp = []\n                for (var i = 1; i <= recebe.data[0]; i++) {\n                        temp.push(<option value={i}>{i}</option>)\n                }\n                setIndiceCapitulos(temp)\n\n        }, [])\n\n        async function NavegaPagina(recebe, livro, capitulo) {//funcao para navegar entre os capitulos e livros chamada avanças e voltar páginas\n\n                const navega = await GetAPI(`${idade}/${livro}/${capitulo}`)\n                SetParamsLivro(livro)\n                SetParamsCapitulo(capitulo)\n                setCapitulos(navega)\n\n                console.log(\"NAVEGOU\")\n        }\n\n\n        if (!capitulos) {//ICONE DE CARREGAR ENQUANTO NÃO TRAS AS INFOD\n                return (\n                        <>\n                                <SearchAppBar />\n                                <LinearIndeterminate />\n                                <Footer />\n                        </>\n                )\n        }\n\n        return (\n                <>\n                        <SearchAppBar />\n                        <article className=\"painelleitura-article\">\n                                <h3 className=\"painelleitura-article-h3\">{paramsLivro} - {paramscapitulo}</h3>\n                                {capitulos.data[1].map((recebe, index) => {\n                                        return (\n                                                <p className=\"painelleitura-article-paragrafo\">{index + 1} - {recebe}</p>)\n                                })}\n\n                                <ul className=\"painelleitura-article-ul\" >\n\n                                        <li className=\"painelleitura-article-li\" onClick={(recebe, livro = paramsLivro, capitulo = parseInt(paramscapitulo) - 1) => {\n                                                NavegaPagina(recebe, livro, capitulo)\n                                        }}>\n                                                <span><i class=\"fas fa-arrow-circle-left fa-sm\"></i></span>  {paramsLivro} - {parseInt(paramscapitulo) - 1}\n                                        </li >\n\n                                        {/* <li className=\"painelleitura-article-li\" className=\"painelleitura-article-li\">\n                                                CAPÍTULO\n                                        </li> */}\n                                        <li className=\"painelleitura-article-li\" >\n\n                                                <label  >CAPÍTULO</label>\n\n\n                                                <select className=\"painelleitura-article-select\"\n                                                        value={parseInt(paramscapitulo)}\n                                                        onChange={(recebe, livro = paramsLivro, capitulo = \"\") => {\n                                                                NavegaPagina(recebe, livro, capitulo = recebe.target.value)\n                                                        }}>\n                                                        {indiceCapitulos}\n                                                </select>\n\n                                        </li>\n\n                                        <li className=\"painelleitura-article-li\" onClick={(recebe, livro = paramsLivro, capitulo = parseInt(paramscapitulo) + 1) => {\n                                                NavegaPagina(recebe, livro, capitulo)\n                                        }}>\n                                                {paramsLivro} - {parseInt(paramscapitulo) + 1} <span><i class=\"fas fa-arrow-circle-right fa-sm\"></i></span>\n                                        </li >\n\n                                </ul>\n                        </article>\n\n\n\n                        <menu className=\"painelleitura-menu\">\n\n                                <ul className=\"menu-painelleitura-ul\">\n\n                                        <Link className='li-vamos' to=\"/\">\n                                                <li className='menu-painelleitura-li' >\n                                                        <i class=\"fas fa-home fa-2x icone\"></i>INÍCIO\n                                                </li>\n\n                                        </Link>\n\n                                        <Link className='li-vamos' to=\"/biblianvi\">\n                                                <li className='menu-painelleitura-li'>\n                                                        <i class=\"fas fa-bible fa-2x icone\"></i> LEITURA DA BÍBLIA\n                                                </li>\n                                        </Link>\n                                        <li className='menu-painelleitura-li' >\n                                                <i class=\"fas fa-sun fa-2x icone\"></i>VERSÍCULOS DO DIA\n                                                </li>\n                                        <li className='menu-painelleitura-li' >\n                                                <i class=\"fas fa-music fa-2x icone\"></i>HINOS DA HARPA\n                                                </li>\n\n                                </ul>\n\n                        </menu>\n\n                        <Footer />\n\n\n                </>\n        )\n\n\n}",{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","severity":1,"message":"73","line":8,"column":8,"nodeType":"74","messageId":"75","endLine":8,"endColumn":16},{"ruleId":"76","severity":1,"message":"77","line":40,"column":15,"nodeType":"78","endLine":54,"endColumn":6},{"ruleId":"76","severity":1,"message":"79","line":54,"column":8,"nodeType":"80","endLine":54,"endColumn":10,"suggestions":"81"},{"ruleId":"72","severity":1,"message":"82","line":12,"column":20,"nodeType":"74","messageId":"75","endLine":12,"endColumn":29},{"ruleId":"83","severity":1,"message":"84","line":25,"column":17,"nodeType":"85","endLine":25,"endColumn":68},{"ruleId":"83","severity":1,"message":"84","line":33,"column":17,"nodeType":"85","endLine":33,"endColumn":68},{"ruleId":"83","severity":1,"message":"84","line":41,"column":17,"nodeType":"85","endLine":41,"endColumn":68},{"ruleId":"76","severity":1,"message":"77","line":20,"column":19,"nodeType":"78","endLine":44,"endColumn":10},{"ruleId":"72","severity":1,"message":"86","line":28,"column":25,"nodeType":"74","messageId":"75","endLine":28,"endColumn":43},{"ruleId":"87","severity":1,"message":"88","line":30,"column":29,"nodeType":"74","messageId":"89","endLine":30,"endColumn":35},{"ruleId":"76","severity":1,"message":"90","line":44,"column":12,"nodeType":"80","endLine":44,"endColumn":14,"suggestions":"91"},"no-native-reassign",["92"],"no-negated-in-lhs",["93"],"no-unused-vars","'MenuIcon' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has a missing dependency: 'props.idadeLivro'. Either include it or remove the dependency array.","ArrayExpression",["94"],"'setImagem' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'armazenaIdadeLivro' is assigned a value but never used.","no-redeclare","'recebe' is already defined.","redeclared","React Hook useEffect has missing dependencies: 'paramsLivro', 'paramscapitulo', and 'props.match.params.idade'. Either include them or remove the dependency array.",["95"],"no-global-assign","no-unsafe-negation",{"desc":"96","fix":"97"},{"desc":"98","fix":"99"},"Update the dependencies array to be: [props.idadeLivro]",{"range":"100","text":"101"},"Update the dependencies array to be: [paramsLivro, paramscapitulo, props.match.params.idade]",{"range":"102","text":"103"},[2025,2027],"[props.idadeLivro]",[2563,2565],"[paramsLivro, paramscapitulo, props.match.params.idade]"]