[{"/home/marco/Documents/project_react/proj-biblia/client/src/index.js":"1","/home/marco/Documents/project_react/proj-biblia/client/src/App.js":"2","/home/marco/Documents/project_react/proj-biblia/client/src/components/biblia/biblia.js":"3","/home/marco/Documents/project_react/proj-biblia/client/src/components/painelLeitura/painelLeitura.js":"4","/home/marco/Documents/project_react/proj-biblia/client/src/components/header/header.js":"5","/home/marco/Documents/project_react/proj-biblia/client/src/components/article/article.js":"6","/home/marco/Documents/project_react/proj-biblia/client/src/components/menu/menu.js":"7","/home/marco/Documents/project_react/proj-biblia/client/src/components/footer/footer.js":"8","/home/marco/Documents/project_react/proj-biblia/client/src/components/biblia/selectTestamento.js":"9","/home/marco/Documents/project_react/proj-biblia/client/src/components/biblia/carrosel.js":"10","/home/marco/Documents/project_react/proj-biblia/client/src/fetch/api.js":"11","/home/marco/Documents/project_react/proj-biblia/client/src/components/progresso/progresso.js":"12","/home/marco/Documents/project_react/proj-biblia/client/src/components/popularBDHarpa/popularBDHarpa.js":"13","/home/marco/Documents/project_react/proj-biblia/client/src/components/hinoHarpa/hinoHarpa.js":"14","/home/marco/Documents/project_react/proj-biblia/client/src/components/painelMenuLateral/painelMenuLateral.js":"15","/home/marco/Documents/project_react/proj-biblia/client/src/components/pesquisaBiblia/pesquisabiblia.js":"16","/home/marco/Documents/project_react/proj-biblia/client/src/components/sobre/sobre.js":"17","/home/marco/Documents/project_react/proj-biblia/client/src/components/paginaErro/paginaErro.js":"18"},{"size":1516,"mtime":1610472838857,"results":"19","hashOfConfig":"20"},{"size":414,"mtime":1609267543181,"results":"21","hashOfConfig":"20"},{"size":2791,"mtime":1610277967972,"results":"22","hashOfConfig":"20"},{"size":10908,"mtime":1610572686232,"results":"23","hashOfConfig":"20"},{"size":6346,"mtime":1630099952697,"results":"24","hashOfConfig":"20"},{"size":1477,"mtime":1610553310796,"results":"25","hashOfConfig":"20"},{"size":1195,"mtime":1610536654907,"results":"26","hashOfConfig":"20"},{"size":526,"mtime":1608656548759,"results":"27","hashOfConfig":"20"},{"size":6982,"mtime":1610463802103,"results":"28","hashOfConfig":"20"},{"size":919,"mtime":1609931831218,"results":"29","hashOfConfig":"20"},{"size":208,"mtime":1630082641583,"results":"30","hashOfConfig":"20"},{"size":550,"mtime":1608672760061,"results":"31","hashOfConfig":"20"},{"size":2361,"mtime":1611267570267,"results":"32","hashOfConfig":"20"},{"size":9543,"mtime":1630106974096,"results":"33","hashOfConfig":"20"},{"size":1342,"mtime":1610478045317,"results":"34","hashOfConfig":"20"},{"size":8555,"mtime":1610335795293,"results":"35","hashOfConfig":"20"},{"size":3640,"mtime":1610477819567,"results":"36","hashOfConfig":"20"},{"size":701,"mtime":1610473225491,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"41"},"nyl6v8",{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"41"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"41"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"41"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"41"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"41"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"41"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"41"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},"/home/marco/Documents/project_react/proj-biblia/client/src/index.js",["83"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\"\nimport Biblia from \"./components/biblia/biblia\"\nimport PainelLeitura from \"./components/painelLeitura/painelLeitura\"\nimport HinoHarpa from \"./components/hinoHarpa/hinoHarpa\"\nimport PesquisaBiblia from \"./components/pesquisaBiblia/pesquisabiblia\"\nimport Sobre from \"./components/sobre/sobre\"\nimport PaginaErro from \"./components/paginaErro/paginaErro\"\nimport './index.css';\nimport App from './App';\n\n\nimport PopularBDHarpa from \"./components/popularBDHarpa/popularBDHarpa\"\n\n\nReactDOM.render(\n  <BrowserRouter>\n    <Switch>\n      <Route path=\"/\" exact={true} component={App} />\n      <Route path=\"/biblianvi\" exact={true} component={Biblia} />\n      <Route path=\"/biblianvi/painelleitura/:idade/:livro/:capitulo/:versiculo\" component={PainelLeitura} />{/* recebe 3 parametros */}\n      <Route path=\"/harpacrista\" component={HinoHarpa} />\n      {/* <Route path=\"/populaharpa\" component={PopularBDHarpa} /> */}\n      <Route path=\"/biblianvi/pesquisa/:palavrapesquisabiblia\" component={PesquisaBiblia} />\n      <Route path=\"/sobre\" component={Sobre} ></Route>\n      <Route path=\"*\" component={PaginaErro} />\n\n    </Switch>\n  </ BrowserRouter>\n  , document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n",["84","85"],"/home/marco/Documents/project_react/proj-biblia/client/src/App.js",[],"/home/marco/Documents/project_react/proj-biblia/client/src/components/biblia/biblia.js",[],"/home/marco/Documents/project_react/proj-biblia/client/src/components/painelLeitura/painelLeitura.js",["86","87","88","89","90","91"],"import { React, useState, useEffect } from 'react';\n\nimport SearchAppBar from \"../header/header\"\nimport LinearIndeterminate from \"../../components/progresso/progresso\"\nimport Footer from \"../../components/footer/footer\"\nimport PainelMenuLateral from \"../../components/painelMenuLateral/painelMenuLateral\"\nimport GetAPI from \"../../fetch/api\"\nimport \"./painelLeitura.css\"\n\nexport default function PainelLeitura(props) { //recebe via url 3 Parametros: props.match.idade,  props.match.params.livro  props.match.params.capitulo\n        const [idade, setIdade] = useState() //recebe do async a idade do livro, novo ou antigo\n        const [paramsLivro, SetParamsLivro] = useState(props.match.params.livro)//recebe o param livro quando o componente é aberto\n        const [paramscapitulo, SetParamsCapitulo] = useState(props.match.params.capitulo) //recebe o param capitulo quando o componente é aberto\n        const [paramsVersiculo, setParamsVersiculo] = useState(props.match.params.versiculo)\n        const [capitulos, setCapitulos] = useState(false) //é alterado com o effect quando o site é carregado e pela func NavegaPagina que é chamadoa por avançar e voltar pagina\n        const [indiceCapitulos, setIndiceCapitulos] = useState([]) //usado para listar os capitulos os botoes avanças e voltar\n        const [curiosidades, setCuriosidades] = useState(false)\n        const [erroBusca, setErroBusca] = useState(false)\n        const [carregando, setCarregando] = useState(true)\n\n\n        const ErroAoBuscar = () => {\n                return (\n                        <>\n                                <SearchAppBar />\n\n                                <article className=\"erro-article\">\n                                        <div className=\"erro-article-div\">\n                                                <spam><i class=\"fas fa-exclamation-triangle fa-5x\"></i></spam>\n                                                <h1>Desculpe, mas a pesquisa não retornou informação.</h1>\n                                        </div>\n                                </article>\n                                <PainelMenuLateral />\n                                <Footer />\n                        </>\n                )\n        }\n\n\n        useEffect(async () => {//quando carrgada o componente, ja carrega com o livro e capitulo recebido pelo params\n\n                if (props.match.params.idade === \"antigo\") {\n                        // armazenaIdadeLivro = \"buscalivroantigotesta\"\n                        setIdade(\"antigotesta\")\n                        var recebe = await GetAPI(`antigotesta/${paramsLivro}/${paramscapitulo}`) // recebe = obj versiculos do capitulo + quantidade de capitulos do livro\n                        if (recebe.data[1] < 1 || recebe.data[0] < 1 || recebe.data < 1) {//se não retornar versiculo, capituos ou nada\n                                setErroBusca(true) //ative o componente true\n                                setCarregando(false) //desative o carregando\n                                return\n                        }\n                        setCapitulos(recebe)\n                        setCarregando(false)\n\n                } else {\n                        // armazenaIdadeLivro = \"buscalivronovotesta\"\n                        setIdade(\"novotesta\")\n                        var recebe = await GetAPI(`novotesta/${paramsLivro}/${paramscapitulo}`)\n                        if (recebe.data[1] < 1 || recebe.data[0] < 1 || recebe.data < 1) {\n                                setErroBusca(true)\n                                setCarregando(false)\n                                return\n                        }\n                        setCapitulos(recebe)\n                        setCarregando(false)\n                }\n\n                var temp = []\n                for (var i = 1; i <= recebe.data[0]; i++) {\n                        temp.push(<option value={i} key={i}>{i}</option>)\n                }\n                setIndiceCapitulos(temp)\n                BuscaCuriosodades(paramsLivro)\n\n                if (paramsVersiculo != \"m\") {\n                        var mudaCorVersiculoSolicitado = document.getElementById(paramsVersiculo)\n                        mudaCorVersiculoSolicitado.style.color = \"Red\"\n                }\n                //identifica o versiculo solicitado (se vier) e como cada paragrafo tem o id do versiculo, altera a cor\n\n        }, [])\n\n        async function NavegaPagina(recebe, livro, capitulo) {//funcao para navegar entre os capitulos e livros chamada avanças e voltar páginas\n                if (capitulo === 0) {\n                        return\n                }\n                const navega = await GetAPI(`${idade}/${livro}/${capitulo}`)\n                if (capitulo > navega.data[0]) {\n                        return\n                }\n                SetParamsLivro(livro)\n                SetParamsCapitulo(capitulo)\n                setCapitulos(navega)\n                var mudaCorVersiculoSolicitado = document.getElementById(paramsVersiculo)\n                console.log(typeof (mudaCorVersiculoSolicitado))\n                // console.log(mudaCorVersiculoSolicitado.hasOwnProperty(\"className\"))\n                if (paramsVersiculo != \"m\" & mudaCorVersiculoSolicitado != null) {\n\n                        mudaCorVersiculoSolicitado.style.color = \"Black\"\n                }       //Para evitar que ao avançar de página  o versiculo da url continue vermelho\n\n        }\n\n        async function BuscaCuriosodades(recebeLivro) {\n                const resultado = await GetAPI(`buscacuriosidade/${recebeLivro}`)\n                setCuriosidades(resultado)\n                console.log(resultado)\n        }\n\n\n        if (carregando) {//ICONE DE CARREGAR ENQUANTO NÃO TRAS AS INFOD\n                return (\n                        <>\n                                <SearchAppBar />\n                                <LinearIndeterminate />\n                                <Footer />\n                        </>\n                )\n        }\n\n        if (erroBusca) {\n                return (\n                        <ErroAoBuscar />\n                )\n        }\n\n\n\n        return (\n                <>\n                        <SearchAppBar />\n                        <menu className=\"painelleiturabiblia-menu\" id=\"inicio\">\n                                <article className=\"painelleitura-article\">\n\n                                        <div className=\"painelleitura-article-div\">\n                                                <h3 className=\"painelleitura-article-h3\">{paramsLivro} - {paramscapitulo}</h3>\n                                                {capitulos.data[1].map((recebe, index) => {\n                                                        return (\n                                                                <p id={index + 1} className=\"painelleitura-article-paragrafo\" key={index}><spam >{index + 1}</spam> - {recebe}</p>)\n                                                })}\n\n                                        </div>\n                                </article>\n                                <PainelMenuLateral />\n                                <article className=\"painelleitura-article-paginacao\">\n                                        <ul className=\"painelleitura-article-ul\" >\n\n                                                <a href=\"#inicio\">   <li\n                                                        className=\"painelleitura-article-li\" onClick={(recebe, livro = paramsLivro, capitulo = parseInt(paramscapitulo) - 1) => {\n                                                                NavegaPagina(recebe, livro, capitulo)\n                                                        }}>\n                                                        <span><i className=\"fas fa-arrow-circle-left fa-sm\"></i></span>  {paramsLivro} -   {parseInt(paramscapitulo) - 1 === 0 ? parseInt(paramscapitulo) : parseInt(paramscapitulo) - 1}\n                                                </li > </a>\n\n\n                                                <li className=\"painelleitura-article-li\" >\n\n                                                        <label  >CAPÍTULO</label>\n\n\n                                                        <select className=\"painelleitura-article-select\"\n                                                                value={parseInt(paramscapitulo)}\n                                                                onChange={(recebe, livro = paramsLivro, capitulo = \"\") => {\n                                                                        NavegaPagina(recebe, livro, capitulo = recebe.target.value)\n                                                                }}>\n                                                                {indiceCapitulos}\n                                                        </select>\n\n                                                </li>\n\n                                                <a className=\"ancora\" href=\"#inicio\">   <li className=\"painelleitura-article-li\" onClick={(recebe, livro = paramsLivro, capitulo = parseInt(paramscapitulo) + 1) => {\n                                                        NavegaPagina(recebe, livro, capitulo)\n                                                }}>\n                                                        {paramsLivro} -  {parseInt(paramscapitulo) + 1 > capitulos.data[0] ? parseInt(paramscapitulo) : parseInt(paramscapitulo) + 1}  <span><i className=\"fas fa-arrow-circle-right fa-sm\"></i></span>\n                                                        {/* Se capitulo +1 for maior que quantodade de capitulos existente então vai continuar com o valor atual, se não incrementa mais 1*/}\n                                                </li > </a>\n\n                                        </ul>\n                                </article>\n\n\n\n                                <article className=\"painelleitura-article-article\">\n                                        {curiosidades && curiosidades.data.map((recebe, index) => {\n                                                return (\n\n                                                        <div key={index} className=\"painelleitura-article-article-div\" >\n                                                                <span  ><i className=\"fas fa-search fa-3x\"></i></span>\n                                                                <h3 className=\"painelleitura-article-article-div-p-um\">Curiosidades</h3>\n                                                                <p className=\"painelleitura-article-article-div-p-dois\">{recebe.conteudo}</p>\n                                                        </div>\n                                                )\n                                        })}\n                                </article>\n\n\n\n\n                        </menu>\n\n                        <Footer />\n                </>\n        )\n\n\n}","/home/marco/Documents/project_react/proj-biblia/client/src/components/header/header.js",["92"],"import { React, useState, memo } from 'react';\nimport { Link } from \"react-router-dom\";\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport InputBase from '@material-ui/core/InputBase';\nimport { fade, makeStyles } from '@material-ui/core/styles';\nimport SearchIcon from '@material-ui/icons/Search';\nimport Button from '@material-ui/core/Button';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\n\n\nimport \"./header.css\"\n\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n        [theme.breakpoints.down('xs')]: {\n            width: '100%'\n        },\n\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n        display: \"none\",\n        [theme.breakpoints.down('xs')]: {\n            display: 'block',\n        },\n    },\n    title: {\n        flexGrow: 1,\n        display: 'none',\n        [theme.breakpoints.up('sm')]: {\n            display: 'block',\n        },\n    },\n    search: {\n        position: 'relative',\n        borderRadius: theme.shape.borderRadius,\n        backgroundColor: fade(theme.palette.common.white, 0.15),\n        '&:hover': {\n            backgroundColor: fade(theme.palette.common.white, 0.25),\n        },\n        marginLeft: 0,\n        width: '100%',\n        [theme.breakpoints.up('sm')]: {\n            marginLeft: theme.spacing(1),\n            width: 'auto',\n        },\n\n\n        [theme.breakpoints.down('xs')]: {\n            marginLeft: theme.spacing(1),\n            width: '60%',\n        },\n\n\n    },\n    searchIcon: {\n        padding: theme.spacing(0, 2),\n        height: '100%',\n        position: 'absolute',\n        pointerEvents: 'none',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    inputRoot: {\n        color: 'inherit',\n    },\n    inputInput: {\n        padding: theme.spacing(1, 1, 1, 0),\n        // vertical padding + font size from searchIcon\n        paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n        transition: theme.transitions.create('width'),\n        width: '100%',\n        [theme.breakpoints.up('sm')]: {\n            width: '12ch',\n            '&:focus': {\n                width: '20ch',\n            },\n        },\n    },\n\n\n\n}));\n\nfunction SearchAppBar() {\n    const [anchorEl, setAnchorEl] = useState(null);\n\n    const handleClick = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n    const classes = useStyles();\n    const [dataPesquisa, setDataPesquisa] = useState()\n\n    function Buscar(tecla) {\n\n        if (tecla.key === \"Enter\") {\n            if (dataPesquisa === undefined || dataPesquisa.length < 2) {\n                alert(\"Digite ao menos 2 letras para iniciar a pesquisa\")\n                return\n            }\n            // alert(\"Pressione o botão buscar para encontrar o que deseja\")\n            window.location.href = `/biblianvi/pesquisa/${dataPesquisa}`\n        }\n    }\n\n    return (\n        <div className={classes.root}>\n            <AppBar position=\"relative\" style={{ backgroundColor: \"#14a37f\" }}>\n                <Toolbar>\n                    {/* <IconButton\n                        edge=\"start\"\n                        className={classes.menuButton}\n                        color=\"inherit\"\n                        aria-label=\"open drawer\"\n                    >\n                        <MenuIcon />\n\n                    </IconButton> */}\n\n\n                    <Button aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick} className={classes.menuButton}>\n                        <i style={{ color: \"white\" }} class=\"fas fa-bars fa-2x\"></i>\n\n                    </Button>\n                    <Menu\n                        id=\"simple-menu\"\n                        anchorEl={anchorEl}\n                        keepMounted\n                        open={Boolean(anchorEl)}\n                        onClose={handleClose}\n                    >\n                        <Link className='li-vamos' to=\"/\">\n                            <MenuItem onClick={handleClose}>INÍCIO</MenuItem></Link>\n                        <Link className='li-vamos' to=\"/biblianvi#selecionar\">\n                            <MenuItem onClick={handleClose}>LEITURA DA BÍBLIA</MenuItem></Link>\n                        <Link className='li-vamos' to=\"/harpacrista\">\n                            <MenuItem onClick={handleClose}>HINOS DA HARPA</MenuItem></Link>\n                        <Link className=\"li-vamos\" to=\"/sobre\">\n                            <MenuItem onClick={handleClose}>SOBRE</MenuItem></Link>\n                    </Menu>\n\n\n\n\n\n                    <Typography style={{ display: \"flex\", fontFamily: 'Lora' }}\n                        className={classes.title} variant=\"h4\" noWrap>\n                        <span style={{ marginLeft: \"15px\" }}\n                            className=\"icone-bible\"><i className=\"fas fa-bible fa-1x\"></i></span> <span className=\"SearchAppBar-spam\" style={{ marginLeft: \"25px\" }}> FONTE DE VIDA on line</span>\n                    </Typography>\n                    <div className={classes.search}>\n                        <div className={classes.searchIcon}>\n                            <SearchIcon />\n                        </div>\n                        <InputBase\n                            onChange={(recebe) => { setDataPesquisa(recebe.target.value) }}\n                            onKeyDown={(recebe) => { Buscar(recebe) }}\n                            placeholder=\"Pesquisar\"\n                            classes={{\n                                root: classes.inputRoot,\n                                input: classes.inputInput,\n                            }}\n                            inputProps={{ 'aria-label': 'search' }}\n                        />\n\n                    </div>\n                    {/* <Link to={`/biblianvi/pesquisa/${dataPesquisa}`}>\n                        <Button\n                            style={{ marginLeft: \"7px\" }}\n                            variant=\"contained\">Buscar\n                        </Button>\n                    </Link> */}\n                </Toolbar>\n            </AppBar>\n        </div >\n    );\n}\n\nexport default memo(SearchAppBar)","/home/marco/Documents/project_react/proj-biblia/client/src/components/article/article.js",[],"/home/marco/Documents/project_react/proj-biblia/client/src/components/menu/menu.js",[],"/home/marco/Documents/project_react/proj-biblia/client/src/components/footer/footer.js",[],"/home/marco/Documents/project_react/proj-biblia/client/src/components/biblia/selectTestamento.js",["93","94"],"import { React, useState, useEffect } from 'react';\nimport { Link } from \"react-router-dom\"\n\nimport GetAPI from \"../../fetch/api\"\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Input from '@material-ui/core/Input';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\nconst useStyles = makeStyles((theme) => ({\n    container: {\n        display: 'flex',\n        flexWrap: 'wrap',\n    },\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120,\n    },\n}));\n\nexport default function DialogSelect(props) {//props recebe ANTIGO TESTAMENTO\" ou NOVO TESTAMENTO\"\n\n    const [antigoTestamento, setAntigoTestamento] = useState() //armazena a busca os livros\n    const [idadeLivro, setIdadeLivro] = useState([])//usado como parâmetro para direcionar url componente painelLeitura\n    const [selectLivro, setSelectLivro] = useState() //usado para poder alterar campo do livro\n    const [selectCapitulo, setSelectCapitulo] = useState() // armazena a busca pelos capítulos\n    const [selectCapituloAlteraCampo, setSelectCapituloAlteraCampo] = useState() //usado para poder alterar campo do capitulo\n\n\n    const classes = useStyles();\n    const [open, setOpen] = useState(false);\n\n\n    useEffect(async () => { //assim que o módulo carregar buscar os livros\n\n        if (props.idadeLivro === \"ANTIGO TESTAMENTO\") {// se antigo testamento, busque os respectivos livros\n            const resultado = await GetAPI(\"buscalivroantigotesta\")\n            setIdadeLivro(\"antigo\")\n            setAntigoTestamento(resultado)\n\n        } else {\n\n            const resultado = await GetAPI(\"buscalivronovotesta\")\n            setIdadeLivro(\"novo\")\n            setAntigoTestamento(resultado)\n\n        }\n\n\n    }, [])\n\n\n    const handleChange = (event) => {//QUANDO UM CAPITULO É SELECIONADO\n        if (event.target.value === \"SELECIONE\") { setSelectLivro(false) } else {//se o valor do campo for SELECIONE, significa que não foi selecionado nenhum livro,\n            setSelectLivro(event.target.value) //FIXA NO ESTADO O VALOR DO LIVO\n            BuscaCapitulo(event.target.value) //CHAMA A FUNÇÃO PARA BUUSCAR OS CAPITULOS DO LIVRO\n        }\n    };\n\n    async function BuscaCapitulo(recebe) { //busca o capitulo enviando o livro (recebe)\n        if (props.idadeLivro === \"ANTIGO TESTAMENTO\") {\n            const capitulos = await GetAPI(`buscacapituloantigotesta${recebe}`)\n            setSelectCapitulo(capitulos)\n        } else {\n            const capitulos = await GetAPI(`buscacapitulonovotesta${recebe}`)\n            setSelectCapitulo(capitulos)\n        }\n\n    }\n\n    const handleClickOpen = () => {\n\n\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n\n        setOpen(false);\n\n    };\n\n\n\n    return (\n        <div >\n            <Button style={{ fontFamily: \"Lora\", fontSize: \"25px\", color: \"White\", borderRadius: \"350px\" }} onClick={handleClickOpen}>BUSCAR LIVRO</Button>\n            <Dialog disableBackdropClick disableEscapeKeyDown open={open} onClose={handleClose}>\n                <DialogTitle >{props.idadeLivro}</DialogTitle>\n                <DialogContent>\n                    <form className={classes.container}>\n                        <FormControl className={classes.formControl}>\n                            <InputLabel htmlFor=\"demo-dialog-native\">LIVRO</InputLabel>\n                            <Select\n                                native\n                                value={selectLivro}\n                                onChange={handleChange}\n                                input={<Input id=\"demo-dialog-native\" />}\n                            >\n                                <option aria-label=\"None\" value=\"SELECIONE\"> </option>\n\n                                {antigoTestamento && antigoTestamento.data.map((recebe, index) => {\n                                    return (\n                                        < option key={index} > {recebe}</option>)\n                                })}\n\n                                {/* <option value={10}>Ten</option>\n                                <option value={20}>Twenty</option>\n                                <option value={30}>Thirty</option> */}\n                            </Select>\n                        </FormControl>\n                        <FormControl className={classes.formControl}>\n                            <InputLabel id=\"demo-dialog-select-label\">CAPITULO</InputLabel>\n                            <Select\n                                native\n                                value={selectCapituloAlteraCampo}\n                                onChange={(recebe) => { //se o valor do campo for SELECIONE, significa que não foi selecionado nenhum versiculo, portanto conf o valor para fase e assim o botão ok não habilita\n                                    if (recebe.target.value === \"SELECIONE\") { setSelectCapituloAlteraCampo(false) } else {\n                                        setSelectCapituloAlteraCampo(recebe.target.value)\n                                    }\n                                }}\n                                input={<Input id=\"demo-dialog-native\" />}\n                            >\n\n                                <option aria-label=\"None\" value=\"SELECIONE\"> </option>\n                                {selectCapitulo && selectCapitulo.data.map((recebe, index) => {\n                                    return (\n\n                                        <option key={index} >{recebe}</option>\n                                    )\n\n\n                                })}\n\n                            </Select>\n                        </FormControl>\n                    </form>\n                </DialogContent>\n                <DialogActions>\n\n                    <Button onClick={handleClose} color=\"primary\">\n                        Cancel\n          </Button>\n\n                    <Link to={`/biblianvi/painelleitura/${idadeLivro}/${selectLivro}/${selectCapituloAlteraCampo}/m`} >\n                        {/* o /M é pq na rota do routerdom pede o versiculo, e como o select não envia, para poder abrir o componente envia uma letra qualquer */}\n                        {/* direciona para a URL/componente /biblianvi/painelleitura com os params forçando abrir o componente painelLeitura com o livro e o cap */}\n                        <Button\n                            disabled={!selectLivro || !selectCapituloAlteraCampo}\n                            onClick={handleClose} color=\"primary\">\n                            Ok\n          </Button>\n                    </Link>\n                </DialogActions>\n            </Dialog>\n        </div >\n    );\n}\n","/home/marco/Documents/project_react/proj-biblia/client/src/components/biblia/carrosel.js",["95","96","97","98"],"import React from 'react';\nimport { useState } from 'react';\nimport \"./carrosel.css\"\nimport Zero from \"./zero.jpg\"\nimport Um from \"./um.jpg\"\nimport Dois from \"./dois.png\"\n\n\n\nexport default function Carrosel(props) {\n\n    const imagem =\n        [\n            Zero,\n            Um,\n            Dois,\n        ]\n\n\n\n\n    if (props.idadeLivro === \"ANTIGO TESTAMENTO\") {\n        return (\n            <div className=\"carrosel-div\">\n                <img className=\"imagem-carrosel\" src={imagem[0]} />\n            </div>\n        )\n    }\n\n    if (props.idadeLivro === \"NOVO TESTAMENTO\") {\n        return (\n            <div className=\"carrosel-div\">\n                <img className=\"imagem-carrosel\" src={imagem[1]} />\n            </div>\n        )\n    }\n\n    else {\n        return (\n            <div className=\"carrosel-div\">\n                <img className=\"imagem-carrosel\" src={imagem[2]} />\n            </div>\n        )\n    }\n\n\n}","/home/marco/Documents/project_react/proj-biblia/client/src/fetch/api.js",[],"/home/marco/Documents/project_react/proj-biblia/client/src/components/progresso/progresso.js",[],"/home/marco/Documents/project_react/proj-biblia/client/src/components/popularBDHarpa/popularBDHarpa.js",["99"],"\nimport { React, useState, useEffect } from 'react';\nimport axios from \"axios\"\nimport \"./populaBDHARPA.css\"\n\n\n\nexport default function PopularBDHarpa() {\n    const [livro, setLivro] = useState()\n    const [conteudo, setConteudo] = useState()\n\n    const [temp, setTemp] = useState(false)\n\n\n    useEffect(() => {\n\n\n    }, [])\n\n\n    async function GetAPIFAKE(livro, conteudo) {\n        const resultado = await axios.post(\"http://192.168.0.6:9000/cadastracuriosidades\", {\n            livro: livro,\n            conteudo: conteudo,\n        })\n        return resultado\n\n\n        // const resultado = await axios.get(\"http://192.168.0.6:9000/cadastracuriosidades\")\n\n\n    }\n\n    async function Chama(data) {\n        // data.preventDefault()\n        const dados = await GetAPIFAKE(livro, conteudo)\n        console.log(dados)\n\n    }\n\n\n\n    if (!temp) {\n        return (\n            <form onSubmit={(envia) => { Chama(envia) }}>\n\n                <label>Livro</label>\n                <input className=\"caixa\"\n                    value={livro}\n                    onChange={(recebe) => { setLivro(recebe.target.value) }}\n                ></input>\n                <br />\n\n\n                <label>conteudo</label>\n                <input className=\"caixa\"\n                    value={conteudo}\n                    onChange={(recebe) => {\n                        setConteudo(recebe.target.value)\n\n                    }}\n                ></input>\n                <br />\n\n\n\n                <button className=\"botaoo\" >CADASTRA</button>\n\n            </form>\n        )\n    }\n\n    return (\n        <>\n            <form onSubmit={(envia) => { Chama(envia) }}>\n\n                <label>Livro</label>\n                <input\n                    value={livro}\n                    onChange={(recebe) => { setLivro(recebe.target.value) }}\n                ></input>\n                <br />\n\n\n                <label>conteudo</label>\n                <input\n                    value={conteudo}\n                    onChange={(recebe) => {\n                        setConteudo(recebe.target.value)\n\n                    }}\n                ></input>\n                <br />\n\n\n\n                <button >CADASTRA</button>\n\n            </form>\n\n\n            {temp.map((recebe) => {\n                return (\n                    <p>{recebe}</p>\n                )\n            })}\n        </>\n\n\n\n\n\n    )\n\n\n}\n\n\n","/home/marco/Documents/project_react/proj-biblia/client/src/components/hinoHarpa/hinoHarpa.js",["100","101"],"import { React, useState, useEffect } from 'react';\n\nimport SearchAppBar from \"../header/header\"\nimport Footer from \"../../components/footer/footer\"\nimport LinearIndeterminate from \"../../components/progresso/progresso\"\nimport PainelMenuLateral from \"../../components/painelMenuLateral/painelMenuLateral\"\nimport \"./hinoHarpa.css\"\nimport GetAPI from \"../../fetch/api\"\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport TextField from '@material-ui/core/TextField'\nimport Button from '@material-ui/core/Button'\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 80,\n\n    },\n    selectEmpty: {\n        marginTop: theme.spacing(2),\n    },\n}));\n\nexport default function HinoHarpa() {\n    const classes = useStyles();\n    const [numerosHinos, setNumerosHinos] = useState()  //armazena numeros dos hinos vindos do bd\n    const [alteraCampoNumero, setAlteraCampoNumero] = useState(false) //responspavel por fixar o campo numero selecionado\n    const [letraHino, setLetraHino] = useState(false) //armazena a letra do Hino. é falso para renderizar somente quando houver dados\n    const [tituloHino, setTituloHino] = useState(false) //armazena o título do Hino\n    const [campoTituloBusca, setCampoTituloBusca] = useState()// armazena dados do campo busca titulo\n    const [dadosBuscaPesquisaPorTitulo, setDadosBuscaPesquisaPorTitulo] = useState(false) //armazena os dados da pesquisa por nome. é falso para renderizar somente quando houver dados\n    const [erroPesquisaPorPalavra, setErroPesquisaPorPalavra] = useState(false)\n\n    useEffect(async () => {\n\n        const resultado = await GetAPI(\"buscanumeroharpa\")\n        setNumerosHinos(resultado)\n\n    }, [])\n\n\n\n\n    async function BuscarHinoPorNumero(recebe) {//recebe só terá valor se for chamada pelo buscar por título Gambi, pq demora para atualizar o estado do setAlteraCampoNumero\n\n        // if (!alteraCampoNumero) {\n        //     alert(\"Selecione um número para buscar o Hino\")\n        //     return\n        // }\n        if (recebe) {\n            setAlteraCampoNumero(recebe)\n            const buscaHino = await GetAPI(`buscatitulopornumero/${recebe}`)\n            console.log(letraHino)\n            var armazena = []\n            armazena = buscaHino.data[0].letra.split(\"%\")\n            setErroPesquisaPorPalavra(false)\n            setLetraHino(armazena)//armazena array com as linhas já divididas\n            setTituloHino(buscaHino.data[0].titulo) //armazena o titulo do hino\n        } else {\n\n            const buscaHino = await GetAPI(`buscatitulopornumero/${alteraCampoNumero}`)\n            console.log(letraHino)\n            var armazena = []\n            armazena = buscaHino.data[0].letra.split(\"%\")\n            setErroPesquisaPorPalavra(false)\n            setLetraHino(armazena)//armazena array com as linhas já divididas\n            setTituloHino(buscaHino.data[0].titulo) //armazena o titulo do hino\n        }\n    }\n\n    async function BuscahinoPorLetraTitulo() {//busca título hino por letra\n        if (campoTituloBusca === undefined || campoTituloBusca.length < 2) {\n            alert(\"Digite ao menos 2 letras para iniciar a pesquisa\")\n            return\n        }\n        const recebe = await GetAPI(`buscatituloporpalavra/${campoTituloBusca}`)\n        if (recebe.data.length < 1) {// se não retornar nada\n            setErroPesquisaPorPalavra(true)\n            setDadosBuscaPesquisaPorTitulo(false)\n            setLetraHino(false)\n            setTituloHino(false)\n\n        } else {\n            console.log(recebe)\n            setLetraHino(false)//não permitindo renderizar as letras do hino que estiver sendo mostrado\n            setTituloHino(false)//não permitindo renderizar o titulo do hino que estiver sendo mostrado\n\n            setDadosBuscaPesquisaPorTitulo(recebe) //armazena os dados da busca\n            setErroPesquisaPorPalavra(false)\n        }\n\n    }\n\n    if (!numerosHinos) {\n        return (\n            <LinearIndeterminate />\n        )\n    }\n\n    // if (erroPesquisaPorPalavra) {\n    //     return (\n    //         <>\n    //             <SearchAppBar />\n    //             <menu className=\"hinoharpa-busca-menu-erro\">\n    //                 <spam><i class=\"far fa-frown fa-4x\"></i></spam>\n    //                 <p>Não encontrei o Hino desejado.</p>\n    //             </menu>\n    //             <PainelMenuLateral />\n    //             <Footer />\n    //         </>\n    //     )\n    // }\n\n\n\n    return (\n\n        <>\n            <nav className=\"hinoharpa-nav\">\n                <SearchAppBar />\n\n                <article className=\"hinoharp-article\">\n                    {/* style={{ display: \"block\" }} */}\n\n                    <div className=\"hinoharpa-article-div-numero\">\n                        <label className=\"hinoharpa-article-div-label-numero\" >NÚMERO</label>\n\n                        <form className=\"hinoharpa-article-div-form\">\n                            <select className=\"hinoharpa-article-div-select\"\n                                value={alteraCampoNumero}\n                                onChange={(recebe) => setAlteraCampoNumero(recebe.target.value)}\n                            >\n                                <option></option>\n                                {numerosHinos.data.map((recebe, index) => {\n                                    return (\n                                        <option key={index} >{recebe.numero}</option>\n                                    )\n                                })}\n                            </select>\n\n                            <TextField\n                                multiline={true}\n                                rows={2}\n                                style={{ marginLeft: \"10px\", width: \"50%\", justifyContent: \"center\", textAlign: \"center\", marginBottom: \"10px\" }}\n                                disabled={true}\n                                size=\"small\"\n                                id=\"outlined-basic\"\n                                label={tituloHino} />\n\n                            <Button style={{ backgroundColor: \"#14a37f\", color: \"White\", marginLeft: \"15px\" }} variant=\"contained\" disabled={!alteraCampoNumero}\n                                onClick={() => { BuscarHinoPorNumero() }}\n                            >BUSCAR</Button>\n\n                        </form>\n\n                    </div>\n                    <div className=\"hinoharpa-article-div-titulo\">\n                        <div>\n                            <label className=\"hinoharpa-article-div-label-titulo\" >PALAVRA</label>\n                        </div>\n\n                        <form className={classes.root} noValidate autoComplete=\"off\">\n                            <TextField\n                                onChange={(recebe) => {\n                                    setCampoTituloBusca(recebe.target.value)\n                                }}\n                                size=\"small\" id=\"outlined-basic\" label=\"DIGITE\" variant=\"outlined\"\n                            />\n                        </form>\n\n                        <div>\n                            <Button style={{ backgroundColor: \"#14a37f\", color: \"White\", marginLeft: \"10px\" }}\n                                variant=\"contained\"\n                                onClick={() => { BuscahinoPorLetraTitulo() }}\n                            >BUSCAR</Button>\n                        </div>\n\n                    </div>\n\n                </article>\n                <hr></hr>\n\n\n\n                {erroPesquisaPorPalavra\n                    &&\n                    <menu className=\"hinoharpa-busca-menu-erro\">\n                        <spam><i class=\"far fa-frown fa-4x\"></i></spam>\n                        <p>Não encontrei o Hino desejado.</p>\n                    </menu>\n                }\n\n\n\n\n\n\n\n                <article className=\"hinoharpaleitura-article\">\n                    <h3>{tituloHino}</h3>\n                    {letraHino &&\n\n                        letraHino.map((recebe, index) => {\n                            return (\n                                <>\n                                    <p key={index}>{recebe}</p>\n                                </>\n                            )\n                        })}\n\n\n                    <menu className=\"hinoharpa-busca-menu\">\n                        {dadosBuscaPesquisaPorTitulo &&\n\n                            dadosBuscaPesquisaPorTitulo.data.map((recebe, index) => {\n\n                                return (\n                                    <div\n                                        key={recebe.numero}\n                                        onClick={() => {\n                                            setDadosBuscaPesquisaPorTitulo(false)\n                                            BuscarHinoPorNumero(recebe.numero)\n                                        }}\n                                    >\n\n                                        <p\n                                            key={index}\n                                        > <i class=\"icone fas fa-music fa-2x\"></i>HINO: {recebe.numero}</p>\n                                        <p\n                                            key={index + 1}>{recebe.titulo}\n                                        </p>\n                                    </div>\n                                )\n                            })\n                        }\n                    </menu>\n                </article>\n\n                <PainelMenuLateral />\n\n            </nav>\n\n            <Footer />\n        </>\n    )\n\n\n}","/home/marco/Documents/project_react/proj-biblia/client/src/components/painelMenuLateral/painelMenuLateral.js",[],"/home/marco/Documents/project_react/proj-biblia/client/src/components/pesquisaBiblia/pesquisabiblia.js",["102","103","104"],"import { React, useState, useEffect } from 'react';\n// import { Link } from \"react-router-dom\"\nimport { HashLink as Link } from \"react-router-hash-link\"// o hash faz funcionar os links âncoras\nimport LinearIndeterminate from \"../../components/progresso/progresso\"\nimport SearchAppBar from \"../header/header\"\nimport GetApi from \"../../fetch/api\"\nimport \"./pesquisabiblia.css\"\nimport PainelMenuLateral from \"../../components/painelMenuLateral/painelMenuLateral\"\nimport Footer from \"../../components/footer/footer\"\n\nexport default function PesquisaBiblia(props) {\n\n    const [barraProgresso, setBarraProgresso] = useState(true)\n    const [erroBusca, setErroBusca] = useState(false)\n    const [palavraPesquisada, setPalavraPesquisada] = useState(props.match.params.palavrapesquisabiblia)//palavra pesquisada URL\n    const [dadosPesquisa, setDadosPesquisa] = useState(false) //dados recebidos do get\n    const [dadosPesquisaPaginacao, setDadosPesquisaPaginacao] = useState()//divide para paginação\n    const [paginaAvanca, setPaginaAvanca] = useState(4)\n    const [paginaVolta, setPaginaVolta] = useState(0)\n\n\n\n    useEffect(async () => {\n        console.log(\"Params \" + props.match.params.palavrapesquisabiblia)\n        const palavraPesquisadaSemAcento = palavraPesquisada.normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\") //retira acentos\n        const resultado = await GetApi(`biblianvi/pesquisa/${palavraPesquisadaSemAcento.toLowerCase()}`)\n        if (resultado.data.length < 1) {\n            setErroBusca(true) //Ativa o erro\n            setBarraProgresso(false)\n\n\n        } else {\n            setDadosPesquisaPaginacao([{ tamanho: resultado.data.length, paginacao: resultado.data.slice(paginaVolta, paginaAvanca), saberQuePagina: 1 }])\n            setDadosPesquisa(resultado)\n            setBarraProgresso(false)\n            setErroBusca(false)\n\n        }\n    }, [])\n\n    MaisPesquisa()\n\n    async function MaisPesquisa() {\n        if (palavraPesquisada != props.match.params.palavrapesquisabiblia) {//quando uma nova pesquisa é feita a url altera mas o useefect não carrega, para saber se houve nova pesquisa comparamos os dois\n            console.log(\"NOVA PESQUISA COM A PALAVRA: \" + props.match.params.palavrapesquisabiblia)\n            setPalavraPesquisada(props.match.params.palavrapesquisabiblia)\n            const palavraPesquisadaSemAcento = props.match.params.palavrapesquisabiblia.normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\") //retira acentos\n            const resultado = await GetApi(`biblianvi/pesquisa/${palavraPesquisadaSemAcento.toLowerCase()}`)\n            if (resultado.data.length < 1) { //se não vier nenhum dado\n                setErroBusca(true) //ativa o return do de erro\n                setBarraProgresso(false) //desativa o return da barra de progresso\n            } else {\n                setDadosPesquisaPaginacao([{ tamanho: resultado.data.length, paginacao: resultado.data.slice(paginaVolta, paginaAvanca), saberQuePagina: 1 }])\n                setDadosPesquisa(resultado)  //ativa o return dos dados recebidos\n                setBarraProgresso(false)  //desativa o return da barra de progresso\n                setErroBusca(false)  //desativa o return do erro \n            }\n        }\n    }\n\n    function Paginacao(evento, direcao) {\n        if (direcao === \"avanca\" & paginaAvanca < dadosPesquisaPaginacao[0].tamanho) {//se vier da solicição avançar e o pedido para avançar seja menor que o tamanho total\n            setDadosPesquisaPaginacao([{ tamanho: dadosPesquisa.data.length, paginacao: dadosPesquisa.data.slice(paginaVolta + 4, paginaAvanca + 4), saberQuePagina: dadosPesquisaPaginacao[0].saberQuePagina + 1 }])\n            setPaginaAvanca(paginaAvanca + 4)\n            setPaginaVolta(paginaVolta + 4)\n\n        }\n\n        if (direcao === \"voltar\" & paginaVolta > 0) {\n            setDadosPesquisaPaginacao([{ tamanho: dadosPesquisa.data.length, paginacao: dadosPesquisa.data.slice(paginaVolta - 4, paginaAvanca - 4), saberQuePagina: dadosPesquisaPaginacao[0].saberQuePagina - 1 }])\n            setPaginaAvanca(paginaAvanca - 4)\n            setPaginaVolta(paginaVolta - 4)\n        } else {\n            return\n        }\n    }\n\n\n    if (barraProgresso) {\n        return (\n            <>\n                <SearchAppBar />\n                <LinearIndeterminate />\n                <Footer />\n            </>)\n    }\n    if (erroBusca) {\n        return (\n            <>\n                <SearchAppBar />\n                <article className=\"pesquisabibia-article\">\n                    <div className=\"pesquisabibia-article-div-erro\">\n                        <h2> <spam><i class=\"far fa-frown fa-4x\"></i></spam>Desculpe, não encontramos a palavra ***{props.match.params.palavrapesquisabiblia}*** que você solicitou .</h2>\n                    </div>\n                    <PainelMenuLateral />\n                </article >\n                <Footer />\n            </>\n        )\n    }\n\n    return (\n        <>\n            <SearchAppBar />\n            <div className=\"pesquisabibia-article-div-palavra\">\n                <h3><i class=\"fas fa-search fa-3x\"></i> ** {props.match.params.palavrapesquisabiblia} **</h3>\n            </div>\n            <article id=\"inicio\" className=\"pesquisabibia-article\">\n\n                <div className=\"pesquisabibia-article-div-um\">\n                    {dadosPesquisaPaginacao[0].paginacao.map((recebe) => {\n                        return (\n                            <>\n                                {recebe.capituloVersiculoConteudo.map((dados) => {\n                                    return (\n                                        <>\n                                            {/* <p>Capitulo: {dados.capituloLivro}</p> */}\n                                            {dados.conteudo.map((envia, index) => {\n                                                return (\n                                                    <>\n                                                        <div className=\"pesquisabibia-article-div-dois\">\n                                                            <p key={index}>Palavra: {envia.conteudo}</p>\n                                                            <Link to={`/biblianvi/painelleitura/${recebe.idadeTestamento}/${recebe.livro}/${dados.capituloLivro}/${envia.versiculo}#${envia.versiculo}`} >\n                                                                {/* o #indica que o versiculo após ele será um link ancora*/}\n                                                                <p key={index + 1}>{recebe.livro} - {dados.capituloLivro} : {envia.versiculo}</p>\n                                                            </Link>\n                                                        </div>\n                                                    </>\n                                                )\n                                            })}\n                                        </>\n                                    )\n                                })}\n                            </>\n                        )\n                    })}\n                </div>\n            </article>\n\n            <PainelMenuLateral />\n\n            <div className=\"pesquisabibia-article-div-paginas\">\n\n                <ul className=\"pesquisabibia-article-div-paginas-li-ul\">\n                    <a href=\"#inicio\" ><li className=\"pesquisabibia-article-div-paginas-li-left\"\n                        onClick={(recebe, voltar = \"voltar\") => { Paginacao(recebe, voltar) }}>\n                        <span><i className=\"fas fa-arrow-circle-left sm\"></i></span>\n                            Voltar\n                        </li>\n                    </a>\n\n                    <li> Página {dadosPesquisaPaginacao[0].saberQuePagina} de {dadosPesquisaPaginacao[0].tamanho % 4 === 0 ? dadosPesquisaPaginacao[0].tamanho / 4 : Math.floor(dadosPesquisaPaginacao[0].tamanho / 4 + 1)}</li>\n                    {/* A paginção é feita de 4 em 4 a arraiyz dentro do obj recebeido pelo backend. Se o tamanho total dividido por 4  não sobrar nada, então divida por 4 senão divida por 4 pegue o primeiro numero e some mais 1*/}\n                    <a href=\"#inicio\" > <li className=\"pesquisabibia-article-div-paginas-li-right\"\n                        onClick={(recebe, avanca = \"avanca\") => { Paginacao(recebe, avanca) }}>\n                        Avançar<span><i className=\"fas fa-arrow-circle-right sm\"></i></span>\n                    </li>\n                    </a>\n                </ul>\n\n            </div>\n\n\n\n            <Footer />\n\n\n\n        </>\n\n    )\n\n}","/home/marco/Documents/project_react/proj-biblia/client/src/components/sobre/sobre.js",[],"/home/marco/Documents/project_react/proj-biblia/client/src/components/paginaErro/paginaErro.js",[],{"ruleId":"105","severity":1,"message":"106","line":14,"column":8,"nodeType":"107","messageId":"108","endLine":14,"endColumn":22},{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","replacedBy":"112"},{"ruleId":"105","severity":1,"message":"113","line":14,"column":33,"nodeType":"107","messageId":"108","endLine":14,"endColumn":51},{"ruleId":"114","severity":1,"message":"115","line":40,"column":19,"nodeType":"116","endLine":80,"endColumn":10},{"ruleId":"117","severity":1,"message":"118","line":57,"column":29,"nodeType":"107","messageId":"119","endLine":57,"endColumn":35},{"ruleId":"120","severity":1,"message":"121","line":74,"column":37,"nodeType":"122","messageId":"123","endLine":74,"endColumn":39},{"ruleId":"114","severity":1,"message":"124","line":80,"column":12,"nodeType":"125","endLine":80,"endColumn":14,"suggestions":"126"},{"ruleId":"120","severity":1,"message":"121","line":96,"column":37,"nodeType":"122","messageId":"123","endLine":96,"endColumn":39},{"ruleId":"105","severity":1,"message":"127","line":5,"column":8,"nodeType":"107","messageId":"108","endLine":5,"endColumn":18},{"ruleId":"114","severity":1,"message":"115","line":40,"column":15,"nodeType":"116","endLine":56,"endColumn":6},{"ruleId":"114","severity":1,"message":"128","line":56,"column":8,"nodeType":"125","endLine":56,"endColumn":10,"suggestions":"129"},{"ruleId":"105","severity":1,"message":"130","line":2,"column":10,"nodeType":"107","messageId":"108","endLine":2,"endColumn":18},{"ruleId":"131","severity":1,"message":"132","line":25,"column":17,"nodeType":"133","endLine":25,"endColumn":68},{"ruleId":"131","severity":1,"message":"132","line":33,"column":17,"nodeType":"133","endLine":33,"endColumn":68},{"ruleId":"131","severity":1,"message":"132","line":41,"column":17,"nodeType":"133","endLine":41,"endColumn":68},{"ruleId":"105","severity":1,"message":"134","line":12,"column":18,"nodeType":"107","messageId":"108","endLine":12,"endColumn":25},{"ruleId":"114","severity":1,"message":"115","line":38,"column":15,"nodeType":"116","endLine":43,"endColumn":6},{"ruleId":"117","severity":1,"message":"135","line":67,"column":17,"nodeType":"107","messageId":"119","endLine":67,"endColumn":25},{"ruleId":"114","severity":1,"message":"115","line":23,"column":15,"nodeType":"116","endLine":39,"endColumn":6},{"ruleId":"114","severity":1,"message":"136","line":39,"column":8,"nodeType":"125","endLine":39,"endColumn":10,"suggestions":"137"},{"ruleId":"120","severity":1,"message":"121","line":44,"column":31,"nodeType":"122","messageId":"123","endLine":44,"endColumn":33},"no-unused-vars","'PopularBDHarpa' is defined but never used.","Identifier","unusedVar","no-native-reassign",["138"],"no-negated-in-lhs",["139"],"'setParamsVersiculo' is assigned a value but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","no-redeclare","'recebe' is already defined.","redeclared","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","React Hook useEffect has missing dependencies: 'paramsLivro', 'paramsVersiculo', 'paramscapitulo', and 'props.match.params.idade'. Either include them or remove the dependency array.","ArrayExpression",["140"],"'IconButton' is defined but never used.","React Hook useEffect has a missing dependency: 'props.idadeLivro'. Either include it or remove the dependency array.",["141"],"'useState' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'setTemp' is assigned a value but never used.","'armazena' is already defined.","React Hook useEffect has missing dependencies: 'paginaAvanca', 'paginaVolta', 'palavraPesquisada', and 'props.match.params.palavrapesquisabiblia'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setDadosPesquisaPaginacao' needs the current value of 'paginaVolta'.",["142"],"no-global-assign","no-unsafe-negation",{"desc":"143","fix":"144"},{"desc":"145","fix":"146"},{"desc":"147","fix":"148"},"Update the dependencies array to be: [paramsLivro, paramsVersiculo, paramscapitulo, props.match.params.idade]",{"range":"149","text":"150"},"Update the dependencies array to be: [props.idadeLivro]",{"range":"151","text":"152"},"Update the dependencies array to be: [paginaAvanca, paginaVolta, palavraPesquisada, props.match.params.palavrapesquisabiblia]",{"range":"153","text":"154"},[4382,4384],"[paramsLivro, paramsVersiculo, paramscapitulo, props.match.params.idade]",[2094,2096],"[props.idadeLivro]",[1865,1867],"[paginaAvanca, paginaVolta, palavraPesquisada, props.match.params.palavrapesquisabiblia]"]