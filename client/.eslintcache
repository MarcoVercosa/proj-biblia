[{"/home/marco/Documents/project_react/proj-biblia/client/src/index.js":"1","/home/marco/Documents/project_react/proj-biblia/client/src/App.js":"2","/home/marco/Documents/project_react/proj-biblia/client/src/components/biblia/biblia.js":"3","/home/marco/Documents/project_react/proj-biblia/client/src/components/painelLeitura/painelLeitura.js":"4","/home/marco/Documents/project_react/proj-biblia/client/src/components/header/header.js":"5","/home/marco/Documents/project_react/proj-biblia/client/src/components/article/article.js":"6","/home/marco/Documents/project_react/proj-biblia/client/src/components/menu/menu.js":"7","/home/marco/Documents/project_react/proj-biblia/client/src/components/footer/footer.js":"8","/home/marco/Documents/project_react/proj-biblia/client/src/components/biblia/selectTestamento.js":"9","/home/marco/Documents/project_react/proj-biblia/client/src/components/biblia/carrosel.js":"10","/home/marco/Documents/project_react/proj-biblia/client/src/fetch/api.js":"11","/home/marco/Documents/project_react/proj-biblia/client/src/components/progresso/progresso.js":"12","/home/marco/Documents/project_react/proj-biblia/client/src/components/popularBDHarpa/popularBDHarpa.js":"13"},{"size":1010,"mtime":1609476490360,"results":"14","hashOfConfig":"15"},{"size":414,"mtime":1609267543181,"results":"16","hashOfConfig":"15"},{"size":1534,"mtime":1609402812203,"results":"17","hashOfConfig":"15"},{"size":7644,"mtime":1609475250685,"results":"18","hashOfConfig":"15"},{"size":3464,"mtime":1609267849725,"results":"19","hashOfConfig":"15"},{"size":1437,"mtime":1608614799695,"results":"20","hashOfConfig":"15"},{"size":929,"mtime":1608672908176,"results":"21","hashOfConfig":"15"},{"size":526,"mtime":1608656548759,"results":"22","hashOfConfig":"15"},{"size":6231,"mtime":1609475140656,"results":"23","hashOfConfig":"15"},{"size":947,"mtime":1609267636128,"results":"24","hashOfConfig":"15"},{"size":206,"mtime":1609146140963,"results":"25","hashOfConfig":"15"},{"size":550,"mtime":1608672760061,"results":"26","hashOfConfig":"15"},{"size":3425,"mtime":1609582165471,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"nyl6v8",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"30"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/marco/Documents/project_react/proj-biblia/client/src/index.js",[],["58","59"],"/home/marco/Documents/project_react/proj-biblia/client/src/App.js",[],"/home/marco/Documents/project_react/proj-biblia/client/src/components/biblia/biblia.js",[],"/home/marco/Documents/project_react/proj-biblia/client/src/components/painelLeitura/painelLeitura.js",["60","61","62","63"],"import { React, useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom'\nimport SearchAppBar from \"../header/header\"\nimport LinearIndeterminate from \"../../components/progresso/progresso\"\nimport Footer from \"../../components/footer/footer\"\nimport GetAPI from \"../../fetch/api\"\nimport \"./painelLeitura.css\"\n\nexport default function PainelLeitura(props) { //recebe via url 3 Parametros: props.match.idade,  props.match.params.livro  props.match.params.capitulo\n        const [idade, setIdade] = useState() //recebe do async a idade do livro, novo ou antigo\n        const [paramsLivro, SetParamsLivro] = useState(props.match.params.livro)//recebe o param livro quando o componente é aberto\n        const [paramscapitulo, SetParamsCapitulo] = useState(props.match.params.capitulo) //recebe o param capitulo quando o componente é aberto\n        const [capitulos, setCapitulos] = useState(false) //é alterado com o effect quando o site é carregado e pela func NavegaPagina que é chamadoa por avançar e voltar pagina\n        const [indiceCapitulos, setIndiceCapitulos] = useState([]) //usado para listar os capitulos os botoes avanças e voltar\n\n\n\n\n\n        useEffect(async () => {//quando carrgada o componente, ja carrega com o livro e capitulo recebido pelo params\n                let armazenaIdadeLivro = \"\"\n                if (props.match.params.idade === \"antigo\") {\n                        armazenaIdadeLivro = \"buscalivroantigotesta\"\n                        setIdade(\"antigotesta\")\n                        var recebe = await GetAPI(`antigotesta/${paramsLivro}/${paramscapitulo}`) // recebe = obj versiculos do capitulo + quantidade de capitulos do livro\n                        setCapitulos(recebe)\n                } else {\n                        armazenaIdadeLivro = \"buscalivronovotesta\"\n                        setIdade(\"novotesta\")\n                        var recebe = await GetAPI(`novotesta/${paramsLivro}/${paramscapitulo}`)\n                        setCapitulos(recebe)\n                }\n                // const recebe = await GetAPI(`${armazenaIdadeLivro}/${paramsLivro}/${paramscapitulo}`)\n                // console.log(recebe)\n                // setCapitulos(recebe) // recebe = obj versiculos do capitulo + quantidade de capitulos do livro\n\n                //assim que recebe os dados é feito um loop for no obj para listar os capitulos\n                var temp = []\n                for (var i = 1; i <= recebe.data[0]; i++) {\n                        temp.push(<option value={i} key={i}>{i}</option>)\n                }\n                setIndiceCapitulos(temp)\n\n        }, [])\n\n        async function NavegaPagina(recebe, livro, capitulo) {//funcao para navegar entre os capitulos e livros chamada avanças e voltar páginas\n\n                const navega = await GetAPI(`${idade}/${livro}/${capitulo}`)\n                SetParamsLivro(livro)\n                SetParamsCapitulo(capitulo)\n                setCapitulos(navega)\n\n                console.log(\"NAVEGOU\")\n        }\n\n\n        if (!capitulos) {//ICONE DE CARREGAR ENQUANTO NÃO TRAS AS INFOD\n                return (\n                        <>\n                                <SearchAppBar />\n                                <LinearIndeterminate />\n                                <Footer />\n                        </>\n                )\n        }\n\n        return (\n                <>\n                        <SearchAppBar />\n                        <article className=\"painelleitura-article\">\n                                <h3 className=\"painelleitura-article-h3\">{paramsLivro} - {paramscapitulo}</h3>\n                                {capitulos.data[1].map((recebe, index) => {\n                                        return (\n                                                <p className=\"painelleitura-article-paragrafo\" key={index}>{index + 1} - {recebe}</p>)\n                                })}\n\n                                <ul className=\"painelleitura-article-ul\" >\n\n                                        <li className=\"painelleitura-article-li\" onClick={(recebe, livro = paramsLivro, capitulo = parseInt(paramscapitulo) - 1) => {\n                                                NavegaPagina(recebe, livro, capitulo)\n                                        }}>\n                                                <span><i className=\"fas fa-arrow-circle-left fa-sm\"></i></span>  {paramsLivro} - {parseInt(paramscapitulo) - 1}\n                                        </li >\n\n                                        {/* <li className=\"painelleitura-article-li\" className=\"painelleitura-article-li\">\n                                                CAPÍTULO\n                                        </li> */}\n                                        <li className=\"painelleitura-article-li\" >\n\n                                                <label  >CAPÍTULO</label>\n\n\n                                                <select className=\"painelleitura-article-select\"\n                                                        value={parseInt(paramscapitulo)}\n                                                        onChange={(recebe, livro = paramsLivro, capitulo = \"\") => {\n                                                                NavegaPagina(recebe, livro, capitulo = recebe.target.value)\n                                                        }}>\n                                                        {indiceCapitulos}\n                                                </select>\n\n                                        </li>\n\n                                        <li className=\"painelleitura-article-li\" onClick={(recebe, livro = paramsLivro, capitulo = parseInt(paramscapitulo) + 1) => {\n                                                NavegaPagina(recebe, livro, capitulo)\n                                        }}>\n                                                {paramsLivro} - {parseInt(paramscapitulo) + 1} <span><i className=\"fas fa-arrow-circle-right fa-sm\"></i></span>\n                                        </li >\n\n                                </ul>\n                        </article>\n\n\n\n                        <menu className=\"painelleitura-menu\">\n\n                                <ul className=\"menu-painelleitura-ul\">\n\n                                        <Link className='li-vamos' to=\"/\">\n                                                <li className='menu-painelleitura-li' >\n                                                        <i className=\"fas fa-home fa-2x icone\"></i>INÍCIO\n                                                </li>\n\n                                        </Link>\n\n                                        <Link className='li-vamos' to=\"/biblianvi\">\n                                                <li className='menu-painelleitura-li'>\n                                                        <i className=\"fas fa-bible fa-2x icone\"></i> LEITURA DA BÍBLIA\n                                                </li>\n                                        </Link>\n                                        <li className='menu-painelleitura-li' >\n                                                <i className=\"fas fa-sun fa-2x icone\"></i>VERSÍCULOS DO DIA\n                                                </li>\n                                        <li className='menu-painelleitura-li' >\n                                                <i className=\"fas fa-music fa-2x icone\"></i>HINOS DA HARPA\n                                                </li>\n\n                                </ul>\n\n                        </menu>\n\n                        <Footer />\n\n\n                </>\n        )\n\n\n}","/home/marco/Documents/project_react/proj-biblia/client/src/components/header/header.js",[],"/home/marco/Documents/project_react/proj-biblia/client/src/components/article/article.js",[],"/home/marco/Documents/project_react/proj-biblia/client/src/components/menu/menu.js",[],"/home/marco/Documents/project_react/proj-biblia/client/src/components/footer/footer.js",[],"/home/marco/Documents/project_react/proj-biblia/client/src/components/biblia/selectTestamento.js",["64","65"],"import { React, useState, useEffect } from 'react';\nimport { Link } from \"react-router-dom\"\n\nimport GetAPI from \"../../fetch/api\"\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Input from '@material-ui/core/Input';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\nconst useStyles = makeStyles((theme) => ({\n    container: {\n        display: 'flex',\n        flexWrap: 'wrap',\n    },\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120,\n    },\n}));\n\nexport default function DialogSelect(props) {//props recebe ANTIGO TESTAMENTO\" ou NOVO TESTAMENTO\"\n\n    const [antigoTestamento, setAntigoTestamento] = useState() //armazena a busca os livros\n    const [idadeLivro, setIdadeLivro] = useState([])//usado como parâmetro para direcionar url componente painelLeitura\n    const [selectLivro, setSelectLivro] = useState() //usado para poder alterar campo do livro\n    const [selectCapitulo, setSelectCapitulo] = useState() // armazena a busca pelos capítulos\n    const [selectCapituloAlteraCampo, setSelectCapituloAlteraCampo] = useState() //usado para poder alterar campo do capitulo\n\n\n    const classes = useStyles();\n    const [open, setOpen] = useState(false);\n\n\n    useEffect(async () => { //assim que o módulo carregar buscar os livros\n\n        if (props.idadeLivro === \"ANTIGO TESTAMENTO\") {// se antigo testamento, busque os respectivos livros\n            const resultado = await GetAPI(\"buscalivroantigotesta\")\n            setIdadeLivro(\"antigo\")\n            setAntigoTestamento(resultado)\n        } else {\n\n            const resultado = await GetAPI(\"buscalivronovotesta\")\n            setIdadeLivro(\"novo\")\n            setAntigoTestamento(resultado)\n        }\n\n\n    }, [])\n\n\n    const handleChange = (event) => {\n        setSelectLivro(event.target.value)\n        BuscaCapitulo(event.target.value)\n    };\n\n    async function BuscaCapitulo(recebe) { //busca o capitulo enviado o livro (recebe)\n        if (props.idadeLivro === \"ANTIGO TESTAMENTO\") {\n            const capitulos = await GetAPI(`buscacapituloantigotesta${recebe}`)\n            setSelectCapitulo(capitulos)\n        } else {\n            const capitulos = await GetAPI(`buscacapitulonovotesta${recebe}`)\n            setSelectCapitulo(capitulos)\n        }\n\n    }\n\n    const handleClickOpen = () => {\n\n\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n\n\n        setOpen(false);\n    };\n\n\n\n    return (\n        <div >\n            <Button style={{ fontFamily: \"Lora\", fontSize: \"25px\", color: \"White\", borderRadius: \"350px\" }} onClick={handleClickOpen}>BUSCAR LIVRO</Button>\n            <Dialog disableBackdropClick disableEscapeKeyDown open={open} onClose={handleClose}>\n                <DialogTitle >{props.idadeLivro}</DialogTitle>\n                <DialogContent>\n                    <form className={classes.container}>\n                        <FormControl className={classes.formControl}>\n                            <InputLabel htmlFor=\"demo-dialog-native\">LIVRO</InputLabel>\n                            <Select\n                                native\n                                value={selectLivro}\n                                onChange={handleChange}\n                                input={<Input id=\"demo-dialog-native\" />}\n                            >\n                                <option aria-label=\"None\" value=\"SELECIONE\"> </option>\n\n                                {antigoTestamento && antigoTestamento.data.map((recebe, index) => {\n                                    return (\n                                        < option key={index} > {recebe}</option>)\n                                })}\n\n                                {/* <option value={10}>Ten</option>\n                                <option value={20}>Twenty</option>\n                                <option value={30}>Thirty</option> */}\n                            </Select>\n                        </FormControl>\n                        <FormControl className={classes.formControl}>\n                            <InputLabel id=\"demo-dialog-select-label\">CAPITULO</InputLabel>\n                            <Select\n                                native\n                                value={selectCapituloAlteraCampo}\n                                onChange={(recebe) => { setSelectCapituloAlteraCampo(recebe.target.value) }}\n                                input={<Input id=\"demo-dialog-native\" />}\n                            >\n\n                                <option aria-label=\"None\" value=\"SELECIONE\"> </option>\n                                {selectCapitulo && selectCapitulo.data.map((recebe, index) => {\n                                    return (\n\n                                        <option key={index} >{recebe}</option>\n                                    )\n\n\n                                })}\n                                {/* <MenuItem value={10}>Ten</MenuItem> */}\n                                {/* <MenuItem value={20}>Twenty</MenuItem>\n                                <MenuItem value={30}>Thirty</MenuItem> */}\n                            </Select>\n                        </FormControl>\n                    </form>\n                </DialogContent>\n                <DialogActions>\n\n                    <Button onClick={handleClose} color=\"primary\">\n                        Cancel\n          </Button>\n\n                    <Link to={`/biblianvi/painelleitura/${idadeLivro}/${selectLivro}/${selectCapituloAlteraCampo}`} >\n                        {/* direciona para a URL/componente /biblianvi/painelleitura com os params forçando abrir o componente painelLeitura com o livro e o cap */}\n                        <Button onClick={handleClose} color=\"primary\">\n                            Ok\n          </Button>\n                    </Link>\n                </DialogActions>\n            </Dialog>\n        </div >\n    );\n}\n","/home/marco/Documents/project_react/proj-biblia/client/src/components/biblia/carrosel.js",["66","67","68","69"],"import React from 'react';\nimport { useState } from 'react';\nimport \"./carrosel.css\"\nimport Zero from \"./zero.jpg\"\nimport Um from \"./um.jpg\"\nimport Dois from \"./dois.png\"\n\n\n\nexport default function Carrosel(props) {\n\n    const [imagem, setImagem] = useState(\n        [\n            Zero,\n            Um,\n            Dois,\n        ]\n    )\n\n\n\n    if (props.idadeLivro === \"ANTIGO TESTAMENTO\") {\n        return (\n            <div className=\"carrosel-div\">\n                <img className=\"imagem-carrosel\" src={imagem[0]} />\n            </div>\n        )\n    }\n\n    if (props.idadeLivro === \"NOVO TESTAMENTO\") {\n        return (\n            <div className=\"carrosel-div\">\n                <img className=\"imagem-carrosel\" src={imagem[1]} />\n            </div>\n        )\n    }\n\n    else {\n        return (\n            <div className=\"carrosel-div\">\n                <img className=\"imagem-carrosel\" src={imagem[2]} />\n            </div>\n        )\n    }\n\n\n}","/home/marco/Documents/project_react/proj-biblia/client/src/fetch/api.js",[],"/home/marco/Documents/project_react/proj-biblia/client/src/components/progresso/progresso.js",[],"/home/marco/Documents/project_react/proj-biblia/client/src/components/popularBDHarpa/popularBDHarpa.js",["70","71","72"],{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","severity":1,"message":"78","line":20,"column":19,"nodeType":"79","endLine":44,"endColumn":10},{"ruleId":"80","severity":1,"message":"81","line":28,"column":25,"nodeType":"82","messageId":"83","endLine":28,"endColumn":43},{"ruleId":"84","severity":1,"message":"85","line":30,"column":29,"nodeType":"82","messageId":"86","endLine":30,"endColumn":35},{"ruleId":"77","severity":1,"message":"87","line":44,"column":12,"nodeType":"88","endLine":44,"endColumn":14,"suggestions":"89"},{"ruleId":"77","severity":1,"message":"78","line":40,"column":15,"nodeType":"79","endLine":54,"endColumn":6},{"ruleId":"77","severity":1,"message":"90","line":54,"column":8,"nodeType":"88","endLine":54,"endColumn":10,"suggestions":"91"},{"ruleId":"80","severity":1,"message":"92","line":12,"column":20,"nodeType":"82","messageId":"83","endLine":12,"endColumn":29},{"ruleId":"93","severity":1,"message":"94","line":25,"column":17,"nodeType":"95","endLine":25,"endColumn":68},{"ruleId":"93","severity":1,"message":"94","line":33,"column":17,"nodeType":"95","endLine":33,"endColumn":68},{"ruleId":"93","severity":1,"message":"94","line":41,"column":17,"nodeType":"95","endLine":41,"endColumn":68},{"ruleId":"80","severity":1,"message":"96","line":1,"column":10,"nodeType":"82","messageId":"83","endLine":1,"endColumn":19},{"ruleId":"80","severity":1,"message":"97","line":1,"column":21,"nodeType":"82","messageId":"83","endLine":1,"endColumn":37},{"ruleId":"80","severity":1,"message":"98","line":57,"column":15,"nodeType":"82","messageId":"83","endLine":57,"endColumn":21},"no-native-reassign",["99"],"no-negated-in-lhs",["100"],"react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","no-unused-vars","'armazenaIdadeLivro' is assigned a value but never used.","Identifier","unusedVar","no-redeclare","'recebe' is already defined.","redeclared","React Hook useEffect has missing dependencies: 'paramsLivro', 'paramscapitulo', and 'props.match.params.idade'. Either include them or remove the dependency array.","ArrayExpression",["101"],"React Hook useEffect has a missing dependency: 'props.idadeLivro'. Either include it or remove the dependency array.",["102"],"'setImagem' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'emphasize' is defined but never used.","'useScrollTrigger' is defined but never used.","'recebe' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"103","fix":"104"},{"desc":"105","fix":"106"},"Update the dependencies array to be: [paramsLivro, paramscapitulo, props.match.params.idade]",{"range":"107","text":"108"},"Update the dependencies array to be: [props.idadeLivro]",{"range":"109","text":"110"},[2605,2607],"[paramsLivro, paramscapitulo, props.match.params.idade]",[2092,2094],"[props.idadeLivro]"]